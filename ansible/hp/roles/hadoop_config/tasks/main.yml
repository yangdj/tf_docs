- name: create hadoop related directory
  file:
    path: "{{ item.value }}"
    state: directory
  loop: "{{ hadoop_base|dict2items }}"

- name: add hp machines to /etc/hosts
  become: yes
  blockinfile:
    path: /etc/hosts
    marker: "# {mark} {{ item }}"
    block: |
      {{ hostvars[item]["ansible_host"] }} {{ item }}
  loop: "{{ groups['hp'] }}"

- name: generate hadoop configuration file to remote server
  template:
    src: "conf/{{ hadoop_version }}/{{ item }}.j2"
    dest: "{{ hadoop_base.conf_version }}/{{item}}"
  loop:
    - workers
    - masters
    - core-site.xml
    - hdfs-site.xml
    - yarn-site.xml
    - mapred-site.xml
    - capacity-scheduler.xml
    - log4j.properties

- name: rsync hadoop source file to remote server
  synchronize:
    src: "hadoop-{{ hadoop_version }}"
    dest: "{{ hadoop_base.bin }}"

- name: configure hadoop environment
  blockinfile:
    path: "{{ hp_bashrc }}"
    marker: "# {mark} hadoop variables"
    block: |
      export HADOOP_HOME={{ hadoop_base.bin }}/hadoop-{{ hadoop_version }}
      export HADOOP_CONF_DIR={{ hadoop_base.conf }}/{{ hadoop_version }}
      export HADOOP_PID_DIR={{ hadoop_base.pid }}
      export HADOOP_LOG_DIR={{ hadoop_base.log }}
      export PATH=${HADOOP_HOME}/bin:${HADOOP_HOME}/sbin:${PATH}

- name: configure ~/.bashrc file
  blockinfile:
    path: ~/.bashrc
    marker: "# {mark} hadoop configuration file"
    block: | 
      if [ -f {{ hp_bashrc }} ]; then
          source {{ hp_bashrc }}
      fi
