<mxfile host="" modified="2020-07-30T11:09:10.757Z" agent="5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.46.1 Chrome/78.0.3904.130 Electron/7.3.1 Safari/537.36" etag="4w-XItHGsP8LeNeUcPFz" version="13.1.3" pages="6">
    <diagram id="vfFZF6T5zEaPNAkbs139" name="overview">
        <mxGraphModel dx="543" dy="243" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
            <root>
                <mxCell id="gDFmDPiwaw7w_FgC-SHr-0"/>
                <mxCell id="gDFmDPiwaw7w_FgC-SHr-1" parent="gDFmDPiwaw7w_FgC-SHr-0"/>
                <mxCell id="gDFmDPiwaw7w_FgC-SHr-2" value="" style="swimlane;html=1;startSize=20;horizontal=1;containerType=tree;strokeColor=none;" parent="gDFmDPiwaw7w_FgC-SHr-1" vertex="1">
                    <mxGeometry x="7" y="17" width="814" height="551" as="geometry"/>
                </mxCell>
                <mxCell id="gDFmDPiwaw7w_FgC-SHr-3" value="" style="edgeStyle=entityRelationEdgeStyle;startArrow=none;endArrow=none;segment=10;curved=1;" parent="gDFmDPiwaw7w_FgC-SHr-2" source="gDFmDPiwaw7w_FgC-SHr-7" target="gDFmDPiwaw7w_FgC-SHr-8" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="gDFmDPiwaw7w_FgC-SHr-7" value="&lt;a href=&quot;http://www.scala-lang.org&quot;&gt;scala&lt;/a&gt;" style="ellipse;whiteSpace=wrap;html=1;align=center;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1};" parent="gDFmDPiwaw7w_FgC-SHr-2" vertex="1">
                    <mxGeometry x="6" y="264" width="100" height="40" as="geometry"/>
                </mxCell>
                <mxCell id="gDFmDPiwaw7w_FgC-SHr-8" value="syntax" style="whiteSpace=wrap;html=1;rounded=1;arcSize=50;align=center;verticalAlign=middle;strokeWidth=1;autosize=1;spacing=4;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1};" parent="gDFmDPiwaw7w_FgC-SHr-2" vertex="1">
                    <mxGeometry x="126" y="78" width="79" height="26" as="geometry"/>
                </mxCell>
                <mxCell id="mTSVmtWJF3h6enKe_McE-0" value="" style="edgeStyle=entityRelationEdgeStyle;startArrow=none;endArrow=none;segment=10;curved=1;" parent="gDFmDPiwaw7w_FgC-SHr-2" source="gDFmDPiwaw7w_FgC-SHr-7" target="mTSVmtWJF3h6enKe_McE-1" edge="1">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="118" y="134" as="sourcePoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="mTSVmtWJF3h6enKe_McE-1" value="data sturecutre" style="whiteSpace=wrap;html=1;rounded=1;arcSize=50;align=center;verticalAlign=middle;strokeWidth=1;autosize=1;spacing=4;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1};" parent="gDFmDPiwaw7w_FgC-SHr-2" vertex="1">
                    <mxGeometry x="125" y="271" width="115" height="26" as="geometry"/>
                </mxCell>
                <mxCell id="mTSVmtWJF3h6enKe_McE-2" value="" style="edgeStyle=entityRelationEdgeStyle;startArrow=none;endArrow=none;segment=10;curved=1;" parent="gDFmDPiwaw7w_FgC-SHr-2" source="mTSVmtWJF3h6enKe_McE-1" target="mTSVmtWJF3h6enKe_McE-3" edge="1">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="125" y="256" as="sourcePoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="mTSVmtWJF3h6enKe_McE-3" value="&lt;span&gt;collection&lt;/span&gt;&lt;br&gt;" style="whiteSpace=wrap;html=1;rounded=1;arcSize=0;align=center;verticalAlign=middle;strokeWidth=1;autosize=1;spacing=4;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1};" parent="gDFmDPiwaw7w_FgC-SHr-2" vertex="1">
                    <mxGeometry x="267" y="270" width="85" height="26" as="geometry"/>
                </mxCell>
                <mxCell id="uD0bAR_-JJrzXQPhEirC-2" value="" style="edgeStyle=entityRelationEdgeStyle;startArrow=none;endArrow=none;segment=10;curved=1;" parent="gDFmDPiwaw7w_FgC-SHr-2" source="mTSVmtWJF3h6enKe_McE-3" target="uD0bAR_-JJrzXQPhEirC-3" edge="1">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="248" y="350" as="sourcePoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="uD0bAR_-JJrzXQPhEirC-3" value="&lt;ol&gt;&lt;li&gt;mutablle&lt;/li&gt;&lt;li&gt;immutable&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;rounded=1;arcSize=0;align=left;verticalAlign=middle;strokeWidth=1;autosize=1;spacing=4;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1};" parent="gDFmDPiwaw7w_FgC-SHr-2" vertex="1">
                    <mxGeometry x="383" y="262" width="122" height="42" as="geometry"/>
                </mxCell>
                <mxCell id="2gcvc0tPiTWgQCBzK64r-0" value="" style="edgeStyle=entityRelationEdgeStyle;startArrow=none;endArrow=none;segment=10;curved=1;" parent="gDFmDPiwaw7w_FgC-SHr-2" source="mTSVmtWJF3h6enKe_McE-1" target="2gcvc0tPiTWgQCBzK64r-1" edge="1">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="253" y="271" as="sourcePoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="2gcvc0tPiTWgQCBzK64r-1" value="&lt;span&gt;basic&lt;/span&gt;" style="whiteSpace=wrap;html=1;rounded=1;arcSize=0;align=center;verticalAlign=middle;strokeWidth=1;autosize=1;spacing=4;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1};" parent="gDFmDPiwaw7w_FgC-SHr-2" vertex="1">
                    <mxGeometry x="261" y="191" width="63" height="26" as="geometry"/>
                </mxCell>
                <mxCell id="JaJAr9rgZ8gKIXzbXDbX-0" value="" style="edgeStyle=entityRelationEdgeStyle;startArrow=none;endArrow=none;segment=10;curved=1;" parent="gDFmDPiwaw7w_FgC-SHr-2" source="gDFmDPiwaw7w_FgC-SHr-8" target="JaJAr9rgZ8gKIXzbXDbX-1" edge="1">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="118" y="160" as="sourcePoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="JaJAr9rgZ8gKIXzbXDbX-1" value="&lt;ol&gt;&lt;li&gt;specs&lt;/li&gt;&lt;li&gt;variables&lt;/li&gt;&lt;li&gt;operator&lt;/li&gt;&lt;li&gt;control structures&lt;/li&gt;&lt;li&gt;exceptions&lt;/li&gt;&lt;li&gt;functions&lt;/li&gt;&lt;li&gt;classes&lt;/li&gt;&lt;li&gt;traits&lt;/li&gt;&lt;li&gt;package and import&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;rounded=1;arcSize=0;align=left;verticalAlign=middle;strokeWidth=1;autosize=1;spacing=4;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1};" parent="gDFmDPiwaw7w_FgC-SHr-2" vertex="1">
                    <mxGeometry x="238" y="10" width="180" height="162" as="geometry"/>
                </mxCell>
                <mxCell id="KuHfpyloXu5Vevi79LFJ-0" value="" style="edgeStyle=entityRelationEdgeStyle;startArrow=none;endArrow=none;segment=10;curved=1;" parent="gDFmDPiwaw7w_FgC-SHr-2" source="mTSVmtWJF3h6enKe_McE-1" target="KuHfpyloXu5Vevi79LFJ-1" edge="1">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="118" y="179" as="sourcePoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="KuHfpyloXu5Vevi79LFJ-1" value="io" style="whiteSpace=wrap;html=1;rounded=1;arcSize=50;align=center;verticalAlign=middle;strokeWidth=1;autosize=1;spacing=4;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1};" parent="gDFmDPiwaw7w_FgC-SHr-2" vertex="1">
                    <mxGeometry x="260" y="349" width="87" height="26" as="geometry"/>
                </mxCell>
                <mxCell id="0" value="" style="edgeStyle=entityRelationEdgeStyle;startArrow=none;endArrow=none;segment=10;curved=1;" parent="gDFmDPiwaw7w_FgC-SHr-2" source="gDFmDPiwaw7w_FgC-SHr-7" target="1" edge="1">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="118" y="179" as="sourcePoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="1" value="command" style="whiteSpace=wrap;html=1;rounded=1;arcSize=50;align=center;verticalAlign=middle;strokeWidth=1;autosize=1;spacing=4;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1};" parent="gDFmDPiwaw7w_FgC-SHr-2" vertex="1">
                    <mxGeometry x="129" y="456" width="88" height="26" as="geometry"/>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
    <diagram id="VkuhRVuNWo4Isk1fSskC" name="syntax">
        &#xa;        &#xa;        &#xa;        
        <mxGraphModel dx="783" dy="282" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
            &#xa;            &#xa;            &#xa;            
            <root>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="qb4r55SKsurtdfBrbbfe-0"/>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="qb4r55SKsurtdfBrbbfe-1" parent="qb4r55SKsurtdfBrbbfe-0"/>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="HpB7mABzfCAcBU-wO4bE-0" value="&lt;table cellpadding=&quot;4&quot; cellspacing=&quot;0&quot; border=&quot;1&quot; style=&quot;font-size: 1em ; width: 100% ; height: 100%&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;syntax&lt;/th&gt;&lt;th&gt;content&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;specs&lt;/td&gt;&lt;td&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;[// ...,&amp;nbsp;&amp;nbsp;/* ... */] - &lt;/font&gt;comments&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Summer.scala - &lt;/font&gt;scala&amp;nbsp;file name follows the class or object name&lt;/li&gt;&lt;/ol&gt;&lt;h3&gt;identify&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;identifier starts with a letter or underscore, then letters, digits, or underscore&lt;/li&gt;&lt;li&gt;the &lt;font face=&quot;Courier New&quot;&gt;&quot;$&quot;&lt;/font&gt; also counts as a letter, reserved for compiler that should be avoided&lt;/li&gt;&lt;li&gt;&lt;span&gt;avoid identifiers like to&lt;font face=&quot;Courier New&quot;&gt;_string,__init__, or name&lt;/font&gt;_ for underscore has other non-identifiers usage in scala&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;scala identifiers follow camel-case style, &lt;/span&gt;&lt;/span&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;toString&lt;/font&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;variables, fields, method parameters, and functions should start with a lower case letter&lt;/li&gt;&lt;li&gt;classes and traits should start with an upper case letter, &lt;font face=&quot;Courier New&quot;&gt;BigInt&lt;/font&gt;, &lt;font face=&quot;Courier New&quot;&gt;HashMap&lt;/font&gt;&lt;/li&gt;&lt;li&gt;constant names also follow camel-case, with the first character upper case, such as &lt;font face=&quot;Courier New&quot;&gt;XOffset&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;variable&lt;/td&gt;&lt;td&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;val - &lt;/font&gt;once initialized, cannot be reassigned, similar to a &lt;font face=&quot;Courier New&quot;&gt;final&lt;/font&gt; variable in Java&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;var - &lt;/font&gt;can be reassigned&lt;/li&gt;&lt;li&gt;the same name variable can not be defined in the same scope, different scope can define same name variable&lt;/li&gt;&lt;/ol&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;operator&lt;/td&gt;&lt;td&gt;&lt;h3&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;infix operator&lt;/span&gt;&lt;/h3&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;infix operator means the method to invoke sits between the object and the parameter&lt;/li&gt;&lt;li&gt;when the method takes multiple arguments, the arguments should be placed in parentheses ()&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;val s = &quot;hello, world&quot;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;s indexOf 'o' &amp;lt;=&amp;gt; s.indexOf('o')&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;s indexOf (&quot;o&quot;, 5) &amp;lt;=&amp;gt; s.indexOf(&quot;o&quot;, 5)&lt;/font&gt;&lt;/div&gt;&lt;h3&gt;prefix operator&lt;/h3&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;+ - ! ~ - &lt;/font&gt;only there four identifiers can be prefix operator&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;-2.0 &amp;lt;=&amp;gt; (2.0).unary_-&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;!a &amp;lt;=&amp;gt; a.unary_!&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;~1 &amp;lt;=&amp;gt; 1.unary_~&lt;/font&gt;&lt;/div&gt;&lt;h3&gt;postfix operator&lt;/h3&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;prefix operator takes no arguments, it can be invoked without a dot or parentheses&lt;/li&gt;&lt;li&gt;if the method has side effects, the convention is to include parentheses, such as &lt;font face=&quot;Courier New&quot;&gt;print()&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;val s = &quot;hello, world&quot;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;s toLowerCase &amp;lt;=&amp;gt; s.toLowerCase&lt;/font&gt;&lt;/div&gt;&lt;h3&gt;Arithmetic operator&lt;/h3&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;+ - * / %&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;+ - - &lt;/font&gt;sign&lt;/li&gt;&lt;/ol&gt;&lt;h3&gt;relational operator&lt;/h3&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;gt; &amp;lt; &amp;gt;= &amp;lt;= != ==&lt;/font&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;&lt;font face=&quot;Courier New&quot;&gt;this == that &amp;lt;=&amp;gt; if (this eq null) that eq null else this.equals(that) - &lt;/font&gt;compares contents&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;&lt;font face=&quot;Courier New&quot;&gt;this eq that this ne that - &lt;/font&gt;determines whether &lt;font face=&quot;Courier New&quot;&gt;this&lt;/font&gt; and &lt;font face=&quot;Courier New&quot;&gt;that&lt;/font&gt;&amp;nbsp;beging the same object reference&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;&lt;font face=&quot;Courier New&quot;&gt;null == null &amp;amp;&amp;amp; null eq null &amp;lt;=&amp;gt; true&lt;/font&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3&gt;logical operator&lt;/h3&gt;&lt;/div&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;amp;&amp;amp; || - &lt;/font&gt;short-circuit&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;amp; | - &lt;/font&gt;all will be evaluated&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;! - &lt;/font&gt;invert a boolean value&lt;/li&gt;&lt;/ol&gt;&lt;h3&gt;bitwise operator&lt;/h3&gt;&lt;/div&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;amp; ! ^ ~&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;lt;&amp;lt; &amp;gt;&amp;gt; - &lt;/font&gt;signed left and right shift&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;gt;&amp;gt;&amp;gt; - &lt;/font&gt;unsigned right shift&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;lt;&amp;lt;&lt;/font&gt; and &lt;font face=&quot;Courier New&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/font&gt; fill with zeroes&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;gt;&amp;gt;&lt;/font&gt; filles with the highest sign bit of the left-hand value&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;h3&gt;assignment operator&lt;/h3&gt;&lt;/div&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;= += -+ *= /= %=&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3&gt;operator precedence&lt;/h3&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;(all other special characters)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;+ / %&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;+ -&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;:&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;== !=&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;lt; &amp;gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;amp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;^&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;|&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;(all letters)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;(all assignment operators)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;precedence is based on the first character of the methods used in operator notation&lt;/li&gt;&lt;li&gt;if the operator ends with &lt;font face=&quot;Courier New&quot;&gt;&quot;=&quot;&lt;/font&gt;, and the operator is not in &lt;font face=&quot;Courier New&quot;&gt;[&amp;lt;=, &amp;gt;=, ==, !=]&lt;/font&gt;, then the precedence is same as &lt;font face=&quot;Courier New&quot;&gt;&quot;=&quot;&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;2 &amp;lt;&amp;lt; 2 + 2 &amp;lt;=&amp;gt; 2 &amp;lt;&amp;lt; (2 + 2):&amp;nbsp;&lt;/font&gt;the starting&amp;nbsp;&lt;font face=&quot;Courier New&quot;&gt;&amp;lt;&amp;nbsp;&lt;/font&gt;is lower than&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp;+&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;x *= y + 1 &amp;lt;=&amp;gt; x *= (y + 1): *=&amp;nbsp;&lt;/font&gt;precedence is same as&amp;nbsp;&lt;font face=&quot;Courier New&quot;&gt;=&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3&gt;operator associativity&lt;/h3&gt;&lt;/div&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;the associativity is based on the last character &lt;font face=&quot;Courier New&quot;&gt;&quot;:&quot;&lt;/font&gt;&lt;/li&gt;&lt;li&gt;any operator ends in a &lt;font face=&quot;Courier New&quot;&gt;&quot;:&quot;&lt;/font&gt; is invoked on its right operand, passing in the left operand&lt;/li&gt;&lt;li&gt;methods end in other character are invoked on their left operand, passing in the right operand&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;a * b &amp;lt;=&amp;gt; a.*(b)&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;a ::: b &amp;lt;=&amp;gt; b.:::(a)&lt;/font&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;control structure&lt;/td&gt;&lt;td&gt;&lt;h3&gt;if&lt;/h3&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;if (boolean) {...}&amp;nbsp;if (boolean) {...} else {...} - i&lt;/font&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;f&amp;nbsp;&lt;/font&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;returns a value&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3&gt;match&lt;/h3&gt;&lt;/div&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;match&lt;/font&gt;&amp;nbsp;returns a value, can be stored in a variable&lt;/li&gt;&lt;li&gt;any kind of constant can be used, not just integer-type, enum and string contants Java's case statements&lt;/li&gt;&lt;li&gt;no &lt;font face=&quot;Courier New&quot;&gt;break&lt;/font&gt; at the end of each case, it is implicit, then there is no fall through from one to the next&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;val firstArg = if (args.length &amp;gt; 0) args(0) else &quot;&quot;&lt;/font&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;firstArg match {&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; case &quot;salt&quot; =&amp;gt; println(&quot;pepper&quot;)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; case &quot;chips&quot; =&amp;gt; println(&quot;salsa&quot;)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; case &quot;eggs&quot; =&amp;gt; println(&quot;bacon&quot;)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; case _ =&amp;gt; println(&quot;huh?&quot;) // &quot;_&quot; for unknown value&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;}&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;div&gt;val firstArg = if (!args.isEmpty) args(0) else &quot;&quot;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;val friend =&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;firstArg match {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case &quot;salt&quot; =&amp;gt; &quot;pepper&quot;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case &quot;chips&quot; =&amp;gt; &quot;salsa&quot;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case &quot;eggs&quot; =&amp;gt; &quot;bacon&quot;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case _ =&amp;gt; &quot;huh?&quot;&lt;/div&gt;&lt;div&gt;}&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;println(friend)&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;h3&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;loop&lt;/span&gt;&lt;/h3&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;while (boolean) {...} do {...} while (boolean)&amp;nbsp;&amp;nbsp;- w&lt;/font&gt;&lt;font face=&quot;Courier New&quot;&gt;hile&lt;/font&gt;&amp;nbsp;results a&amp;nbsp;&lt;font face=&quot;Courier New&quot;&gt;Unit&lt;/font&gt;&amp;nbsp;value&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;for (arg &amp;lt;- args) {...} - arg&lt;/font&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;&amp;nbsp;is a&amp;nbsp;&lt;/span&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;val&lt;/font&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;&amp;nbsp;type generated in each iteration;&amp;nbsp; &quot;&lt;/span&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;&amp;lt;-&quot;&lt;/font&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;&amp;nbsp;means &quot;in&quot;, as &quot;for arg in args&quot;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;&lt;font face=&quot;Courier New&quot;&gt;for (arg &amp;lt;- args if arg % 2 == 0) {...} - for&lt;/font&gt; with &lt;font face=&quot;Courier New&quot;&gt;if&lt;/font&gt; filter&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;&lt;font face=&quot;Courier New&quot;&gt;for (arg &amp;lt;- args; brg &amp;lt;- brgs) {...} - &lt;/font&gt;multiple &lt;font face=&quot;Courier New&quot;&gt;&amp;lt;-&lt;/font&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;&lt;font face=&quot;Courier New&quot;&gt;for (...) yield {...} - yield&lt;/font&gt; collects values in each iteration&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;// use ()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;for (&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; file &amp;lt;- filesHere&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; if file.getName.endsWith(&quot;.scala&quot;);&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; line &amp;lt;- fileLines(file)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; if line.trim.matches(pattern)&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; ) println(file + &quot;: &quot; + line.trim)&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;//use {}; &quot;;&quot; can be omitted&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;for {&lt;/div&gt;&lt;div style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;file &amp;lt;- filesHere&lt;/div&gt;&lt;div style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if file.getName.endsWith(&quot;.scala&quot;)&lt;/div&gt;&lt;div style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; line &amp;lt;- fileLines(file)&lt;/div&gt;&lt;div style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; trimmed = line.trim&lt;/div&gt;&lt;div style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if trimmed.matches(pattern)&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;&amp;nbsp; &amp;nbsp; } println(file + &quot;: &quot; + trimmed)&lt;/div&gt;&lt;div style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;&lt;div&gt;// yield&amp;nbsp;&lt;/div&gt;&lt;div&gt;val forLineLengths =&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; for {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; file &amp;lt;- filesHere&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if file.getName.endsWith(&quot;.scala&quot;)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; line &amp;lt;- fileLines(file)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; trimmed = line.trim&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if trimmed.matches(&quot;.*for.*&quot;)&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } yield trimmed.length&lt;/div&gt;&lt;/div&gt;&lt;h3&gt;note&lt;/h3&gt;&lt;/div&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;scala leaves out &lt;font face=&quot;Courier New&quot;&gt;break&lt;/font&gt; and &lt;font face=&quot;Courier New&quot;&gt;continue&lt;/font&gt; command, they&amp;nbsp;do not mesh well with function literals&lt;/li&gt;&lt;li&gt;The simplest approach is to replace &lt;b&gt;every continue by an if&lt;/b&gt; and e&lt;b&gt;very break by a boolean variable&lt;/b&gt;&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;// Java&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;int i = 0;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;boolean foundIt = false;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;while (i &amp;lt; args.length) {&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; if (args[i].startsWith(&quot;-&quot;)) {&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; i = i + 1;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; continue;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; if (args[i].endsWith(&quot;.scala&quot;)) {&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; foundIt = true;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; i = i + 1;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;}&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;// Scala with var variable&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;var i = 0&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;var foundIt = false&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;while (i &amp;lt; args.length &amp;amp;&amp;amp; !foundIt) {&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; if (!args(i).startsWith(&quot;-&quot;)) {&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (args(i).endsWith(&quot;.scala&quot;))&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; foundIt = true&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; i = i + 1&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;}&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;// Scala ussing a recursive function, without var variable&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;div&gt;def searchFrom(i: Int): Int =&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (i &amp;gt;= args.length) -1&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;else if (args(i).startsWith(&quot;-&quot;)) searchFrom(i + 1)&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;else if (args(i).endsWith(&quot;.scala&quot;)) i&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;else searchFrom(i + 1)&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;val i = searchFrom(0)&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;exception&lt;/td&gt;&lt;td&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;throw new&amp;nbsp;IllegalArgumentException - throw&lt;/font&gt; has type Nothing&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;try{} catch{} finally {} - &lt;/font&gt;returns a value, if exception thrown&amp;nbsp; not caught,&amp;nbsp; the expression has no resutt at all&lt;/li&gt;&lt;li&gt;the value computed in the &lt;font face=&quot;Courier New&quot;&gt;finally&lt;/font&gt; clause, if there is one, is dropped, it usually does some clean work&lt;/li&gt;&lt;li&gt;if &lt;font face=&quot;Courier New&quot;&gt;finally&lt;/font&gt; has explicit &lt;font face=&quot;Courier New&quot;&gt;return&lt;/font&gt;, or throws an &lt;font face=&quot;Courier New&quot;&gt;exception&lt;/font&gt;, the return value or exception will the final expression result&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;div&gt;def urlFor(path: String) =&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new URL(path)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; } catch {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case e: MalformedURLException =&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new URL(&quot;http://www.scala-lang.org&quot;)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;try {&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; val f = new FileReader(&quot;input.txt&quot;)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;} catch {&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; case ex: FileNotFoundException =&amp;gt; // Handle missing file&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; case ex: IOException =&amp;gt; // Handle other I/O error&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;} finally {&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; file.close()&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;}&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;def f(): Int = try return 1 finally return 2 =&amp;gt; f() =&amp;gt; 2&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;def g(): Int = try 1 finally 2 // g() =&amp;gt; 1&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;function&lt;/td&gt;&lt;td&gt;&lt;h3&gt;definition&lt;/h3&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;def max(x: Int, y: Int): Int = {&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; if (x &amp;gt; y) x&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; else y&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;}&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;// repeated parameters&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;def echo(args: String*) = {}&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;echo(arr: _*)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;// named arguments&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;div&gt;def speed(distance: Float, time: Float): Float =&lt;span style=&quot;font-size: 1em&quot;&gt;&amp;nbsp;distance / time&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;speed(distance = 100, time = 10)&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;// default parameter values&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;div&gt;def printTime(out: java.io.PrintStream = Console.out) =&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; out.println(&quot;time = &quot; + System.currentTimeMillis())&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;h4&gt;function literal&lt;/h4&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;// &lt;/font&gt;specify parameter type&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;(x: Int, y: Int) =&amp;gt; x + y&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;// &lt;/font&gt;without parameter type&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;someNumbers.filter(x =&amp;gt; x &amp;gt; 0)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;//&amp;nbsp;&lt;/font&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;placeholder for parameter syntax, when each parameter appears only once&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;someNumbers.filter(_ &amp;gt; 0)&lt;/font&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;//&amp;nbsp;&lt;font style=&quot;font-size: 1em&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;/font&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;placeholder for an entire parameter list, not just a single parameter, require a space between function name and &quot;_&quot;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;&lt;font face=&quot;Courier New&quot;&gt;someNumbers.foreach(println _) &amp;lt;=&amp;gt;&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;span&gt;&lt;font face=&quot;Courier New&quot;&gt;someNumbers.foreach(x =&amp;gt; println(x))&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;// &lt;/font&gt;&quot;_ &quot; can be omitted when a function is required such as invoked by foreach in the following example, otherwise causes error&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;&lt;font face=&quot;Courier New&quot;&gt;someNumbers.foreach(println _) &amp;lt;=&amp;gt;&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;font face=&quot;Courier New&quot;&gt;someNumbers.foreach(println)&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;val c = sum =&amp;gt; error&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;val c = sum _ =&amp;gt; right&lt;/font&gt;&lt;/div&gt;&lt;h3&gt;note&lt;/h3&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;parameters are &lt;font face=&quot;Courier New&quot;&gt;val&lt;/font&gt; type&lt;/li&gt;&lt;li&gt;the &lt;font face=&quot;Courier New&quot;&gt;return&lt;/font&gt; at the end of function can be omitted, the last value is returned&lt;/li&gt;&lt;li&gt;a function's &lt;i&gt;side effect&lt;/i&gt; is generally defined as mutating state external to the method or performing io action&lt;/li&gt;&lt;li&gt;a functional style prefers vals, immutable objects, and methods without side effects&lt;/li&gt;&lt;li&gt;use vars, mutable objects, and methods with side effects when you have a specific need and justification for them&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;class&lt;/td&gt;&lt;td&gt;&lt;h3&gt;definition&lt;/h3&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;class ChecksumAccumulator {&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; private var sum = 0&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; def add(b: Byte): Unit = {&amp;nbsp;&lt;span style=&quot;font-size: 1em&quot;&gt;sum += b }&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; def checusum(): Int =&lt;/font&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;&amp;nbsp;~(sum &amp;amp; 0xff) + 1&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;class Rational(n: Int, d: Int) {&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp; require(d != 0)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;&amp;nbsp; &amp;nbsp; val numer: Int = n&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp; val denom: Int = d&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp; def this(n: Int) = this(n, 1) // auxiliary constructor&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;&amp;nbsp; &amp;nbsp; override def toString = numer + &quot;/&quot; + denom&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp; def add(that: Rational): Rational =&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new Rational(&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; numer * that.denom + that.numer * denom,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; denom * that.denom&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; )&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp; def + (that: Rational): Rational =&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new Rational(&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; numer * that.denom + that.numer * denom,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; denom * that.denom&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; )&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; def lessThan(that: Rational) =&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.numer * that.denom &amp;lt; that.numer * this.denom&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; def max(that: Rational) =&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (this.lessThan(that)) that else this&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;}&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;h4&gt;modifier&lt;/h4&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;private&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;protected - &lt;/font&gt;only accesible fro subclasses of the class in which the member is defined&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;public - &lt;/font&gt;default, no need to specify&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;override&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;require(d != 0) - requeire&lt;/font&gt; defined in standalone object &lt;font face=&quot;Courier New&quot;&gt;Predef&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;this - &lt;/font&gt;self reference&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;this(n: Int) = this(n, 1) - &lt;/font&gt;auxiliary constructor must invoke another constructor of the same class first&lt;/li&gt;&lt;li&gt;as of &quot;6&quot;, the primary construction is the final single point of entry of a class, and the only calls supclass constructor&lt;/li&gt;&lt;/ol&gt;&lt;h4&gt;singleton object&lt;/h4&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&amp;nbsp;&lt;font face=&quot;Courier New&quot;&gt;import scala.collection.mutable&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;object ChecksumAccumulator {&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;&amp;nbsp; &amp;nbsp; private val cache = mutable.Map.empty[String, Int]&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;def calculate(s: String): Int =&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (cache.contains(s))&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cache(s)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; else {&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; val acc = new ChecksumAccumulator&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; for (c &amp;lt;- s)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; acc.add(c.toByte)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; val cs = acc.checksum()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cache += (s -&amp;gt; cs)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cs&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;}&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;val ca =&amp;nbsp;&lt;/font&gt;&lt;span&gt;&lt;font face=&quot;Courier New&quot;&gt;ChecksumAccumulator.calculate(&quot;Every value is an object.&quot;)&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;ol&gt;&lt;li&gt;a singleton funtions behave like static methods in Java&lt;/li&gt;&lt;li&gt;a singleton object shares the same name with a class, it is called that class's &lt;i&gt;companion object.&amp;nbsp;&lt;/i&gt;&lt;/li&gt;&lt;li&gt;the class is called the &lt;i style=&quot;font-size: 1em&quot;&gt;companion class&lt;/i&gt;&lt;span style=&quot;font-size: 1em&quot;&gt; of the singleton. they are defined&lt;/span&gt;&amp;nbsp;in the same source file.&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;the class and the singleton can&amp;nbsp;&lt;/span&gt;access each other's private members&lt;/li&gt;&lt;li&gt;a singleton wihout a companion class is a &lt;i&gt;standalone object&lt;/i&gt;. it can&lt;i&gt;&amp;nbsp;&lt;/i&gt;collect utility methods or become an app's entry point&lt;/li&gt;&lt;li&gt;the entry point has a &lt;font face=&quot;Courier New&quot;&gt;main&lt;/font&gt; method, taking one &lt;font face=&quot;Courier New&quot;&gt;Array[String]&lt;/font&gt; parameter and returning a &lt;font face=&quot;Courier New&quot;&gt;Unit&lt;/font&gt; value. see below&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;import ChecksumAccumulator.calculate&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;object Summer {&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; def main(args: Array[String]): Unit = {&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; for (arg &amp;lt;- args)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; println(arg + &quot;: &quot; + calculate(arg))&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;}&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;h4&gt;&lt;font face=&quot;Courier New&quot;&gt;scala.App &lt;/font&gt;trait&lt;/h4&gt;&lt;div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;import ChecksumAccumulator.calculate&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; object FallWinterSpringSummer extends App {&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; for (season &amp;lt;- List(&quot;fall&quot;, &quot;winter&quot;, &quot;spring&quot;))&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; println(season + &quot;: &quot; + calculate(season))&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;}&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;works like a singleton object with a main method, use &lt;font face=&quot;Courier New&quot;&gt;args&lt;/font&gt; to access command-line arguments&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;h3&gt;initialization&lt;/h3&gt;&lt;h4&gt;1. new&lt;/h4&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;val big = new java.math.BigInteger(&quot;12345&quot;) - &lt;/font&gt;parameterizes with value&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;val greetStrings = new Array[String](3) -&amp;nbsp;&lt;/font&gt;parameterizes&amp;nbsp;with type and length&lt;/li&gt;&lt;/ol&gt;&lt;h4&gt;2. factory method&lt;/h4&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;val greetStrings = Array(&quot;zero&quot;, &quot;one&quot;, &quot;two&quot;) &amp;lt;=&amp;gt; Apply.apply(&quot;zero&quot;, &quot;one&quot;, &quot;two&quot;)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;a factory method calls an &lt;font face=&quot;Courier New&quot;&gt;apply&lt;/font&gt; method, which creates and returns the new array&lt;/li&gt;&lt;li&gt;the &lt;font face=&quot;Courier New&quot;&gt;apply&lt;/font&gt; method is defined on the corresponding &lt;font face=&quot;Courier New&quot;&gt;Array&lt;/font&gt; &lt;i&gt;companion object&lt;/i&gt;&lt;/li&gt;&lt;li&gt;this seems like calling a static meothod named &lt;font face=&quot;Courier New&quot;&gt;apply&lt;/font&gt; on class &lt;font face=&quot;Courier New&quot;&gt;Array&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;div&gt;&lt;h3&gt;usage&lt;/h3&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;arr(2) &amp;lt;=&amp;gt; arr.apply(2) - &lt;/font&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;a variable surrounded by &lt;/span&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;()&lt;/font&gt;&lt;span style=&quot;font-size: 1em&quot;&gt; invocates an &lt;/span&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;apply&lt;/font&gt;&lt;span style=&quot;font-size: 1em&quot;&gt; method on&amp;nbsp;that variable&lt;/span&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;arr(2) =&amp;nbsp; &quot;hello&quot; &amp;lt;=&amp;gt; arr.update(2, &quot;hello&quot;) -&amp;nbsp;&lt;/font&gt;an assignment invocates an &lt;font face=&quot;Courier New&quot;&gt;update&lt;/font&gt; method&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;1 -&amp;gt; &quot;Go&quot; &amp;lt;=&amp;gt; (1).-&amp;gt;(&quot;Go&quot;) - &quot;-&amp;gt;&quot;&lt;/font&gt; can be invoked on any object, returns a two-element tuple, see &lt;font face=&quot;Courier New&quot;&gt;Map&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;package and import&lt;/td&gt;&lt;td&gt;&lt;h3&gt;import&lt;/h3&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;import&lt;/font&gt; allows using a simple package element name:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;import scala.collection.mutable&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;var helloSet = mutable.Set(&quot;hello&quot;, &quot;world&quot;)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;h3&gt;note&lt;/h3&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;scala implicitly imports packages&amp;nbsp;&lt;/span&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;java.lang&lt;/font&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;scala &lt;/font&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;and the members a singleton object named &lt;/span&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;Predef&lt;/font&gt;&lt;span style=&quot;font-size: 1em&quot;&gt; in &lt;/span&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;scala&lt;/font&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;println&lt;/font&gt; invokes &lt;font face=&quot;Courier New&quot;&gt;Predef.println&lt;/font&gt;, which invokes &lt;font face=&quot;Courier New&quot;&gt;Console.println&lt;/font&gt;, &lt;font face=&quot;Courier New&quot;&gt;assert&lt;/font&gt; invokes &lt;font face=&quot;Courier New&quot;&gt;Predef.assert&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt; " style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;fillColor=none;" parent="qb4r55SKsurtdfBrbbfe-1" vertex="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry x="10" y="21" width="814" height="5796" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;            &#xa;            
            </root>
            &#xa;            &#xa;        &#xa;        
        </mxGraphModel>
        &#xa;        &#xa;    &#xa;    
    </diagram>
    <diagram id="bgcSUaLAC-1q4cRJDx9f" name="data structure">
        &#xa;        &#xa;        &#xa;        
        <mxGraphModel dx="783" dy="333" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
            &#xa;            &#xa;            &#xa;            
            <root>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="0Rvd_On3wIhwAxiwULAO-0"/>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="0Rvd_On3wIhwAxiwULAO-1" parent="0Rvd_On3wIhwAxiwULAO-0"/>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="K1b5NLYzb6JKZ1TuWBmp-0" value="&lt;table cellpadding=&quot;4&quot; cellspacing=&quot;0&quot; border=&quot;1&quot; style=&quot;font-size: 1em ; width: 100% ; height: 100%&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;data structure&lt;/th&gt;&lt;th&gt;content&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;basic&lt;/td&gt;&lt;td&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Byte&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;short&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Int&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Long&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Float&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Double&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Char&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;Boolean&lt;/span&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;Unit&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;immutable&lt;/td&gt;&lt;td&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;java.lang.String&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;[scala.]List(1, 2, 3)&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;tuple: (99, &quot;buff&quot;) - &lt;/font&gt;can&amp;nbsp;contain different types of elements, length up to 22 &lt;font face=&quot;Courier New&quot;&gt;Tuple22&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;[scala.collection.immutable.]Set[, HashSet](&quot;Abuout&quot;, &quot;Before&quot;)&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;[scala.collection.immutable.]Map[, HashaMap](&quot;A&quot; -&amp;gt; &quot;Abuout&quot;, &quot;B&quot; -&amp;gt; &quot;Before&quot;)&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;[scala.collection.immutable.]Range&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;mutable&lt;/td&gt;&lt;td&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Array&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;scala.collection.mutable.ListBuffer&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;scala.collection.mutable.[Set, HashSet](&quot;Abuout&quot;, &quot;Before&quot;)&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;scala.collection.mutable.[Map, HashaMap](&quot;A&quot; -&amp;gt; &quot;Abuout&quot;, &quot;B&quot; -&amp;gt; &quot;Before&quot;)&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;io&lt;/td&gt;&lt;td&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;scala.io.Source&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Console&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;java.io.File&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt; " style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;fillColor=none;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry x="12" y="497" width="803" height="570" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-2" value="" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-0" target="20mQxIMJ3UpCQnM9mhCa-1" edge="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry relative="1" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-4" value="" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-0" target="20mQxIMJ3UpCQnM9mhCa-3" edge="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry relative="1" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-0" value="scala&lt;br&gt;Any" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry x="375" y="13" width="120" height="36" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-28" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-3" target="20mQxIMJ3UpCQnM9mhCa-27" edge="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry relative="1" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-30" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-3" target="20mQxIMJ3UpCQnM9mhCa-29" edge="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry relative="1" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-39" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;exitX=0.562;exitY=1;exitDx=0;exitDy=0;exitPerimeter=0;entryX=0.359;entryY=0;entryDx=0;entryDy=0;entryPerimeter=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-3" target="20mQxIMJ3UpCQnM9mhCa-40" edge="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry relative="1" as="geometry">
                        &#xa;                        &#xa;                        &#xa;                        
                        <mxPoint x="685" y="231" as="targetPoint"/>
                        &#xa;                        &#xa;                    &#xa;                    
                    </mxGeometry>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-3" value="scala&lt;br&gt;AnyRef" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry x="624" y="62" width="121" height="35" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-45" value="" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-38" target="20mQxIMJ3UpCQnM9mhCa-47" edge="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry relative="1" as="geometry">
                        &#xa;                        &#xa;                        &#xa;                        
                        <mxPoint x="565" y="388" as="targetPoint"/>
                        &#xa;                        &#xa;                    &#xa;                    
                    </mxGeometry>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-38" value="scala&lt;br&gt;Null" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry x="653" y="307.5" width="69" height="34" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-32" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-29" target="20mQxIMJ3UpCQnM9mhCa-31" edge="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry relative="1" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-29" value="scala&lt;br&gt;Iterable" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry x="473" y="110" width="74" height="33" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-34" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-31" target="20mQxIMJ3UpCQnM9mhCa-33" edge="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry relative="1" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-36" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-3" target="20mQxIMJ3UpCQnM9mhCa-31" edge="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry relative="1" as="geometry">
                        &#xa;                        &#xa;                        &#xa;                        
                        <mxPoint x="662" y="178.5" as="targetPoint"/>
                        &#xa;                        &#xa;                    &#xa;                    
                    </mxGeometry>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-31" value="scala&lt;br&gt;Seq" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry x="508" y="162" width="74" height="33" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-33" value="scala&lt;br&gt;List" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry x="552" y="219" width="74" height="33" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-27" value="java.lang&lt;br&gt;String" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry x="755" y="176" width="66" height="35" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-6" value="" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-1" target="20mQxIMJ3UpCQnM9mhCa-5" edge="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry relative="1" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-10" value="" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-1" target="20mQxIMJ3UpCQnM9mhCa-9" edge="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry relative="1" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-14" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-1" target="20mQxIMJ3UpCQnM9mhCa-13" edge="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry relative="1" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-16" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-1" target="20mQxIMJ3UpCQnM9mhCa-15" edge="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry relative="1" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-18" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-1" target="20mQxIMJ3UpCQnM9mhCa-17" edge="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry relative="1" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-20" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-1" target="20mQxIMJ3UpCQnM9mhCa-19" edge="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry relative="1" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-22" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-1" target="20mQxIMJ3UpCQnM9mhCa-21" edge="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry relative="1" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-24" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-1" target="20mQxIMJ3UpCQnM9mhCa-23" edge="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry relative="1" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-26" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-1" target="20mQxIMJ3UpCQnM9mhCa-25" edge="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry relative="1" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-51" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-1" target="20mQxIMJ3UpCQnM9mhCa-50" edge="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry relative="1" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-1" value="scala&lt;br&gt;AnyVal" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry x="123" y="65" width="120" height="32" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-50" value="...(other Scala value classes)..." style="rounded=1;whiteSpace=wrap;html=1;strokeColor=none;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry x="320.5" y="255" width="168" height="28.5" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-25" value="scala&lt;br&gt;Unit" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry x="325" y="114" width="55" height="40" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-23" value="scala&lt;br&gt;Boolean" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry x="367" y="178" width="75" height="39" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-21" value="scala&lt;br&gt;Char" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry x="300" y="302" width="56" height="35" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-19" value="scala&lt;br&gt;Byte" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry x="221" y="262" width="71" height="32" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-17" value="scala&lt;br&gt;Short" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry x="163" y="309" width="70" height="31" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-15" value="scala&lt;br&gt;Int" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry x="120" y="268" width="68" height="32" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-13" value="scala&lt;br&gt;Long" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry x="71" y="195" width="86" height="33" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-9" value="scala&lt;br&gt;Float" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry x="27" y="157" width="84" height="32" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-5" value="scala&lt;br&gt;Double" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry x="10" y="114" width="87" height="31" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-37" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-3" target="20mQxIMJ3UpCQnM9mhCa-33" edge="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry relative="1" as="geometry">
                        &#xa;                        &#xa;                        &#xa;                        
                        <mxPoint x="676.3813131313132" y="107" as="sourcePoint"/>
                        &#xa;                        &#xa;                        &#xa;                        
                        <mxPoint x="592" y="188.5" as="targetPoint"/>
                        &#xa;                        &#xa;                    &#xa;                    
                    </mxGeometry>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-40" value="...(other Scala Classes)..." style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry x="633" y="237" width="145" height="18" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-42" value="" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;entryX=0.25;entryY=0;entryDx=0;entryDy=0;" parent="0Rvd_On3wIhwAxiwULAO-1" target="20mQxIMJ3UpCQnM9mhCa-38" edge="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry relative="1" as="geometry">
                        &#xa;                        &#xa;                        &#xa;                        
                        <mxPoint x="632" y="285" as="sourcePoint"/>
                        &#xa;                        &#xa;                        &#xa;                        
                        <mxPoint x="662.9950000000001" y="285" as="targetPoint"/>
                        &#xa;                        &#xa;                    &#xa;                    
                    </mxGeometry>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-43" value="" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="0Rvd_On3wIhwAxiwULAO-1" target="20mQxIMJ3UpCQnM9mhCa-38" edge="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry relative="1" as="geometry">
                        &#xa;                        &#xa;                        &#xa;                        
                        <mxPoint x="686" y="263" as="sourcePoint"/>
                        &#xa;                        &#xa;                        &#xa;                        
                        <mxPoint x="671.25" y="328" as="targetPoint"/>
                        &#xa;                        &#xa;                    &#xa;                    
                    </mxGeometry>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-44" value="" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;entryX=0.75;entryY=0;entryDx=0;entryDy=0;" parent="0Rvd_On3wIhwAxiwULAO-1" target="20mQxIMJ3UpCQnM9mhCa-38" edge="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry relative="1" as="geometry">
                        &#xa;                        &#xa;                        &#xa;                        
                        <mxPoint x="731" y="273" as="sourcePoint"/>
                        &#xa;                        &#xa;                        &#xa;                        
                        <mxPoint x="682" y="310" as="targetPoint"/>
                        &#xa;                        &#xa;                    &#xa;                    
                    </mxGeometry>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-47" value="scala&lt;br&gt;Nothing" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry x="543" y="388" width="83" height="33" as="geometry"/>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-48" value="" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="0Rvd_On3wIhwAxiwULAO-1" target="20mQxIMJ3UpCQnM9mhCa-47" edge="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry relative="1" as="geometry">
                        &#xa;                        &#xa;                        &#xa;                        
                        <mxPoint x="595" y="291" as="sourcePoint"/>
                        &#xa;                        &#xa;                        &#xa;                        
                        <mxPoint x="594.5" y="398" as="targetPoint"/>
                        &#xa;                        &#xa;                    &#xa;                    
                    </mxGeometry>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;                &#xa;                
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-49" value="" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="0Rvd_On3wIhwAxiwULAO-1" target="20mQxIMJ3UpCQnM9mhCa-47" edge="1">
                    &#xa;                    &#xa;                    &#xa;                    
                    <mxGeometry relative="1" as="geometry">
                        &#xa;                        &#xa;                        &#xa;                        
                        <mxPoint x="461" y="317" as="sourcePoint"/>
                        &#xa;                        &#xa;                        &#xa;                        
                        <mxPoint x="594.5" y="398" as="targetPoint"/>
                        &#xa;                        &#xa;                    &#xa;                    
                    </mxGeometry>
                    &#xa;                    &#xa;                &#xa;                
                </mxCell>
                &#xa;                &#xa;            &#xa;            
            </root>
            &#xa;            &#xa;        &#xa;        
        </mxGraphModel>
        &#xa;        &#xa;    &#xa;    
    </diagram>
    <diagram id="nR2PYzQHqloTr89IaROn" name="collection">
        <mxGraphModel dx="543" dy="243" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
            <root>
                <mxCell id="Mz-l86CRCUgJ5snpqF4x-0"/>
                <mxCell id="Mz-l86CRCUgJ5snpqF4x-1" parent="Mz-l86CRCUgJ5snpqF4x-0"/>
                <mxCell id="Mz-l86CRCUgJ5snpqF4x-14" value="" style="group" parent="Mz-l86CRCUgJ5snpqF4x-1" vertex="1" connectable="0">
                    <mxGeometry x="34" y="14" width="335" height="262" as="geometry"/>
                </mxCell>
                <mxCell id="Mz-l86CRCUgJ5snpqF4x-11" value="" style="group" parent="Mz-l86CRCUgJ5snpqF4x-14" vertex="1" connectable="0">
                    <mxGeometry width="335" height="262" as="geometry"/>
                </mxCell>
                <mxCell id="Mz-l86CRCUgJ5snpqF4x-2" value="scala.collection&lt;br&gt;Set&lt;br&gt;&amp;lt;&amp;lt;trait&amp;gt;&amp;gt;" style="rounded=0;whiteSpace=wrap;html=1;align=center;" parent="Mz-l86CRCUgJ5snpqF4x-11" vertex="1">
                    <mxGeometry x="111" width="120" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="Mz-l86CRCUgJ5snpqF4x-5" value="scala.collection.immutable&lt;br&gt;Set&lt;br&gt;&amp;lt;&amp;lt;trait&amp;gt;&amp;gt;" style="rounded=0;whiteSpace=wrap;html=1;align=center;" parent="Mz-l86CRCUgJ5snpqF4x-11" vertex="1">
                    <mxGeometry y="105" width="152" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="Mz-l86CRCUgJ5snpqF4x-6" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="Mz-l86CRCUgJ5snpqF4x-11" source="Mz-l86CRCUgJ5snpqF4x-2" target="Mz-l86CRCUgJ5snpqF4x-5" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="Mz-l86CRCUgJ5snpqF4x-7" value="scala.collection.immutable&lt;br&gt;HashSet" style="rounded=0;whiteSpace=wrap;html=1;align=center;" parent="Mz-l86CRCUgJ5snpqF4x-11" vertex="1">
                    <mxGeometry y="202" width="152" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="Mz-l86CRCUgJ5snpqF4x-8" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="Mz-l86CRCUgJ5snpqF4x-11" source="Mz-l86CRCUgJ5snpqF4x-5" target="Mz-l86CRCUgJ5snpqF4x-7" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="Mz-l86CRCUgJ5snpqF4x-3" value="scala.collection.mutable&lt;br&gt;Set&lt;br&gt;&amp;lt;&amp;lt;trait&amp;gt;&amp;gt;" style="rounded=0;whiteSpace=wrap;html=1;align=center;" parent="Mz-l86CRCUgJ5snpqF4x-11" vertex="1">
                    <mxGeometry x="196" y="105" width="139" height="57" as="geometry"/>
                </mxCell>
                <mxCell id="Mz-l86CRCUgJ5snpqF4x-4" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="Mz-l86CRCUgJ5snpqF4x-11" source="Mz-l86CRCUgJ5snpqF4x-2" target="Mz-l86CRCUgJ5snpqF4x-3" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="Mz-l86CRCUgJ5snpqF4x-9" value="scala.collection.mutable&lt;br&gt;HashSet" style="rounded=0;whiteSpace=wrap;html=1;align=center;" parent="Mz-l86CRCUgJ5snpqF4x-11" vertex="1">
                    <mxGeometry x="196" y="203.5" width="139" height="57" as="geometry"/>
                </mxCell>
                <mxCell id="Mz-l86CRCUgJ5snpqF4x-10" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="Mz-l86CRCUgJ5snpqF4x-11" source="Mz-l86CRCUgJ5snpqF4x-3" target="Mz-l86CRCUgJ5snpqF4x-9" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="Mz-l86CRCUgJ5snpqF4x-17" value="" style="group" parent="Mz-l86CRCUgJ5snpqF4x-1" vertex="1" connectable="0">
                    <mxGeometry x="400" y="16.5" width="335" height="262" as="geometry"/>
                </mxCell>
                <mxCell id="Mz-l86CRCUgJ5snpqF4x-18" value="" style="group" parent="Mz-l86CRCUgJ5snpqF4x-17" vertex="1" connectable="0">
                    <mxGeometry width="335" height="262" as="geometry"/>
                </mxCell>
                <mxCell id="Mz-l86CRCUgJ5snpqF4x-19" value="scala.collection&lt;br&gt;Map&lt;br&gt;&amp;lt;&amp;lt;trait&amp;gt;&amp;gt;" style="rounded=0;whiteSpace=wrap;html=1;align=center;" parent="Mz-l86CRCUgJ5snpqF4x-18" vertex="1">
                    <mxGeometry x="111" width="120" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="Mz-l86CRCUgJ5snpqF4x-20" value="scala.collection.immutable&lt;br&gt;Map&lt;br&gt;&amp;lt;&amp;lt;trait&amp;gt;&amp;gt;" style="rounded=0;whiteSpace=wrap;html=1;align=center;" parent="Mz-l86CRCUgJ5snpqF4x-18" vertex="1">
                    <mxGeometry y="105" width="152" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="Mz-l86CRCUgJ5snpqF4x-21" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="Mz-l86CRCUgJ5snpqF4x-18" source="Mz-l86CRCUgJ5snpqF4x-19" target="Mz-l86CRCUgJ5snpqF4x-20" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="Mz-l86CRCUgJ5snpqF4x-22" value="scala.collection.immutable&lt;br&gt;HashMap" style="rounded=0;whiteSpace=wrap;html=1;align=center;" parent="Mz-l86CRCUgJ5snpqF4x-18" vertex="1">
                    <mxGeometry y="202" width="152" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="Mz-l86CRCUgJ5snpqF4x-23" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="Mz-l86CRCUgJ5snpqF4x-18" source="Mz-l86CRCUgJ5snpqF4x-20" target="Mz-l86CRCUgJ5snpqF4x-22" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="Mz-l86CRCUgJ5snpqF4x-24" value="scala.collection.mutable&lt;br&gt;Map&lt;br&gt;&amp;lt;&amp;lt;trait&amp;gt;&amp;gt;" style="rounded=0;whiteSpace=wrap;html=1;align=center;" parent="Mz-l86CRCUgJ5snpqF4x-18" vertex="1">
                    <mxGeometry x="196" y="105" width="139" height="57" as="geometry"/>
                </mxCell>
                <mxCell id="Mz-l86CRCUgJ5snpqF4x-25" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="Mz-l86CRCUgJ5snpqF4x-18" source="Mz-l86CRCUgJ5snpqF4x-19" target="Mz-l86CRCUgJ5snpqF4x-24" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="Mz-l86CRCUgJ5snpqF4x-26" value="scala.collection.mutable&lt;br&gt;HashMap" style="rounded=0;whiteSpace=wrap;html=1;align=center;" parent="Mz-l86CRCUgJ5snpqF4x-18" vertex="1">
                    <mxGeometry x="196" y="203.5" width="139" height="57" as="geometry"/>
                </mxCell>
                <mxCell id="Mz-l86CRCUgJ5snpqF4x-27" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="Mz-l86CRCUgJ5snpqF4x-18" source="Mz-l86CRCUgJ5snpqF4x-24" target="Mz-l86CRCUgJ5snpqF4x-26" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
    <diagram id="kdeTgDiQPl7qixvHc-LB" name="objects">
        <mxGraphModel dx="543" dy="243" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
            <root>
                <mxCell id="jsgq6v4PfB0sDc6SaF6F-0"/>
                <mxCell id="jsgq6v4PfB0sDc6SaF6F-1" parent="jsgq6v4PfB0sDc6SaF6F-0"/>
                <mxCell id="j3qnsa9EWma0ZfsVXfKA-0" value="&lt;table cellpadding=&quot;4&quot; cellspacing=&quot;0&quot; border=&quot;1&quot; style=&quot;font-size: 1em ; width: 100% ; height: 100%&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;class&lt;/th&gt;&lt;th&gt;content&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Byte&lt;br&gt;Short&lt;br&gt;Int&lt;br&gt;Long&lt;/td&gt;&lt;td&gt;&lt;h3&gt;value&lt;/h3&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;Byte - 8 bits, -2^7 ~ 2^7 -1&lt;/li&gt;&lt;li&gt;Short - 16bits, -2^15 ~ 2^15 - 1&lt;/li&gt;&lt;li&gt;Int - 32bits, -2^31 ~ 2^31 - 1&lt;/li&gt;&lt;li&gt;Long - 64bits, -2^63 ~ 2^63 - 1&lt;/li&gt;&lt;/ol&gt;&lt;h4&gt;literal&lt;/h4&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;12 012 - &lt;/font&gt;&lt;font face=&quot;Courier New&quot;&gt;Int&lt;/font&gt;&amp;nbsp;base 10&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;0x5 0xff - Int&amp;nbsp;&lt;/font&gt;base 16&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;12L - Long&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3&gt;method&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;.to() - (0).to(3) &lt;/font&gt;&lt;font style=&quot;font-size: 1em&quot;&gt;&amp;lt;=&amp;gt;&amp;nbsp;&lt;/font&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;0 to 3&lt;/font&gt;&lt;font style=&quot;font-size: 1em&quot;&gt;, inclueing 0 and 3&lt;/font&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;font style=&quot;font-size: 1em&quot;&gt;&lt;font face=&quot;Courier New&quot;&gt;0 unitl 3 -&lt;/font&gt; including 0, excluding 3&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.toString()&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.max(10) .min(10) - &lt;/font&gt;returns greater and small value&lt;/li&gt;&lt;li&gt;.abs()&lt;/li&gt;&lt;/ol&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Float&lt;br&gt;Double&lt;/td&gt;&lt;td&gt;&lt;h3&gt;value&lt;/h3&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;Float - 32 bits IEEE 754 single-precision float&lt;/li&gt;&lt;li&gt;Double - 64 bits IEEE 754 single-precision float&lt;/li&gt;&lt;/ol&gt;&lt;h4&gt;literal&lt;/h4&gt;&lt;/div&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;1.0 - &lt;/font&gt;Double&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;1.0e10 - &lt;/font&gt;Double&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;1.0f 1.0F - &lt;/font&gt;Float&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;1.0d 1.0D - &lt;/font&gt;Double&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Char&lt;/td&gt;&lt;td&gt;&lt;h3&gt;value&lt;/h3&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;16 bits unsigned unicode character, 0 ~ 2^16 - 1&lt;/li&gt;&lt;/ol&gt;&lt;h4&gt;literal&lt;/h4&gt;&lt;/div&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;'A'- &lt;/font&gt;unicode character between single quote&amp;nbsp;&lt;font face=&quot;Courier New&quot;&gt;''&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;'\uxxxx' '\u0041' '\u00fa' - x &lt;/font&gt;is hex digit&lt;/li&gt;&lt;/ol&gt;&lt;h4&gt;escape literal&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;&lt;font face=&quot;Courier New&quot;&gt;'\b' -&lt;/font&gt; backspace&lt;/span&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;'\t' - &lt;/font&gt;tab&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;'\n' - &lt;/font&gt;line feed&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;'\f' - &lt;/font&gt;form feed&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;'\r' - &lt;/font&gt;carrige return&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;'\&quot;' -&lt;/font&gt; double quote&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;'\'' - &lt;/font&gt;single quote&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;'\\' - &lt;/font&gt;backslash&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;h3&gt;method&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.toByte()&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Boolean&lt;br&gt;&lt;/td&gt;&lt;td&gt;&lt;h3&gt;literal&lt;/h3&gt;&lt;font face=&quot;Courier New&quot;&gt;[true, false]&lt;/font&gt;&lt;br&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Unit&lt;br&gt;&lt;/td&gt;&lt;td&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;()&lt;/font&gt;&amp;nbsp;value&lt;/li&gt;&lt;li&gt;function returns&amp;nbsp;&lt;font face=&quot;Courier New&quot;&gt;Unit&lt;/font&gt;&amp;nbsp;when no value returned&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Unit == &quot;&quot; =&amp;gt; false&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;&lt;h3&gt;literal&lt;/h3&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&quot;hello, world&quot;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&quot;&quot;&quot;hello,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; world!&quot;&quot;&quot;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;=&amp;gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;hello,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; world!&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&quot;&quot;&quot;|hello,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp;|world!&quot;&quot;&quot;.stripMargin&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;=&amp;gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;hello,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;world!&lt;/font&gt;&lt;/div&gt;&lt;h3&gt;method&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;+ -&amp;nbsp;&lt;/font&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;concatenates strings&lt;/span&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;* -&amp;nbsp;&lt;/font&gt;concatenates&amp;nbsp;string multiple times&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.to[Byte, Short, Int, Long, Float, Double]()&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.toLowerCase() .toUpperCase() .captalize()&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.mkString()&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.endsWith()&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.contains()&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.matches()&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.trim()&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.length&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.isEmpty&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.drop(2)&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;s&quot;hello, $name, age is: ${6 * 7}&quot; - &lt;/font&gt;string interpolates&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;raw&quot;no\\\\escape!&quot; =&amp;gt; no\\\\escape! - &lt;/font&gt;raw string will not escape&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;f&quot;${math.pi}%.5f&quot; - &lt;/font&gt;printf-style formatting, when no &quot;%&quot;, then default is &quot;%s&quot;, the toString value&lt;/li&gt;&lt;/ol&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;List&lt;/td&gt;&lt;td&gt;&lt;h3&gt;value&lt;/h3&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Nil &amp;lt;=&amp;gt; List() - &lt;/font&gt;an emply list&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;h3&gt;method&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;.length -&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;gets&amp;nbsp;the number of the elements&lt;/span&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.isEmpty - &lt;/font&gt;determines whether the list is empty&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.head -&amp;nbsp;&lt;/font&gt;gets&amp;nbsp;the first element&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.last -&amp;nbsp;&lt;/font&gt;gets&amp;nbsp;the last element&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.init -&amp;nbsp;&lt;/font&gt;gets&amp;nbsp;all but the last element&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.tail -&amp;nbsp;&lt;/font&gt;gets&amp;nbsp;all but the first element&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.reverse -&amp;nbsp;&lt;/font&gt;gets&amp;nbsp;a reversed list&lt;/li&gt;&lt;li&gt;.&lt;font face=&quot;Courier New&quot;&gt;sorted -&amp;nbsp;&lt;/font&gt;gets&amp;nbsp;a sorted list&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.count(s =&amp;gt; s.length == 4) - &lt;/font&gt;gets number of elements with length 4&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.exists(s =&amp;gt; s == &quot;util&quot;) - &lt;/font&gt;determins whether exists a &quot;util&quot; element&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.contains(&quot;util&quot;)&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.forall(s =&amp;gt; s.endsWith(&quot;l&quot;)) - &lt;/font&gt;determins whether all elements ends with &quot;l&quot;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.mkString(&quot;,&quot;) - &lt;/font&gt;makes a string using giving delemiter&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.map(s =&amp;gt; s + &quot;y&quot;)&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.foreach(s =&amp;gt; println(s)) &amp;lt;=&amp;gt; .foreach(println) -&amp;nbsp;&lt;/font&gt;executes on each elements&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.filter(s =&amp;gt; s.length == 4)&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.filterNot(s =&amp;gt; s.length == 4) -&amp;nbsp;&lt;/font&gt;gets&amp;nbsp;the opposite elements of .filter()&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.reduceLeft((a, b) =&amp;gt; if (a.length &amp;gt; b.length) a else b&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.sortWith((s, t) =&amp;gt; s.charAt(0).toLower &amp;lt; t.charAt(0).toLower) -&amp;nbsp;&lt;/font&gt;gets list ordered by the first lowered char&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;:: -&amp;nbsp;&lt;/font&gt;prepend&amp;nbsp;&lt;span style=&quot;font-size: 1em&quot;&gt;a new element to the beginning of an existing list and returns the new list&lt;/span&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;::: - &lt;/font&gt;concatenas list&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.drop(2) - &lt;/font&gt;drops the first 2 elements&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.dropRight(2) - &lt;/font&gt;drops the rightmost 2 elements&lt;/li&gt;&lt;/ol&gt;&lt;h3&gt;example&lt;/h3&gt;&lt;div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;val oneTwo = List(1, 2)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;val threeFour = List(3, 4)&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;oneTwo ::: threeFour&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;1 :: oneTwo &amp;lt;=&amp;gt; oneTwo.::(1)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;val ontTwoThree = 1 :: 2 :: 3 :: Nil&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;LIstBuffer&lt;/td&gt;&lt;td&gt;&lt;h3&gt;method&lt;/h3&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;.toList&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;tuple&lt;br&gt;&lt;/td&gt;&lt;td&gt;&lt;h3&gt;value&lt;/h3&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;val pair = (99, &quot;buffer&quot;) -&amp;nbsp;&lt;/font&gt;initializes using&amp;nbsp;&lt;font face=&quot;Courier New&quot;&gt;()&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;pair._2 -&lt;/font&gt;&amp;nbsp;accesses individual with&amp;nbsp;&lt;font face=&quot;Courier New&quot;&gt;._N&lt;/font&gt;, N starts with 1&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Set, Map&lt;/td&gt;&lt;td&gt;&lt;h3&gt;method&lt;/h3&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;+= - &lt;/font&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;appends a item, not apply for immutable&lt;/span&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.contains(&quot;A')&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&lt;h3&gt;example&lt;/h3&gt;&lt;font face=&quot;Courier New&quot;&gt;val x = new HashMap[Int, String]()&lt;/font&gt;&lt;br&gt;&lt;font face=&quot;Courier New&quot;&gt;var direct = Map(&quot;A&quot; -&amp;gt; &quot;About&quot;, &quot;B&quot; -&amp;gt; &quot;Before&quot;)&lt;/font&gt;&lt;br&gt;&lt;font face=&quot;Courier New&quot;&gt;direct&amp;nbsp;+= (&quot;C&quot; -&amp;gt; &quot;Center&quot;)&lt;/font&gt;&lt;br&gt;&lt;font face=&quot;Courier New&quot;&gt;direct(&quot;C&quot;)&lt;/font&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Range&lt;/td&gt;&lt;td&gt;&lt;font face=&quot;Courier New&quot;&gt;0 to 3&lt;br&gt;0 until 3&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Source&lt;/td&gt;&lt;td&gt;&lt;h3&gt;method&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Source.fromResource(&quot;hello.txt&quot;).getLines (scalaVersion &amp;gt;= 2.13) -&amp;nbsp;&lt;/font&gt;reads file from resources folder&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Source.fromFile(&quot;hello.txt&quot;) -&amp;nbsp;&lt;/font&gt;reads file from normal path&lt;/li&gt;&lt;/ol&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Console&lt;/td&gt;&lt;td&gt;&lt;h3&gt;method&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;[Console].print()&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;[Console].println() - ends with a linefeed&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Console.out.println()&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Console.err.println()&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;File&lt;/td&gt;&lt;td&gt;&lt;h3&gt;method&lt;/h3&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.listFiles()&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;.getName()&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt; " style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;fillColor=none;" parent="jsgq6v4PfB0sDc6SaF6F-1" vertex="1">
                    <mxGeometry x="7" y="5" width="815" height="3000" as="geometry"/>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
    <diagram id="dZEcrmRi2HBb3MoQ6wx3" name="command">
        <mxGraphModel dx="543" dy="243" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
            <root>
                <mxCell id="0Bx4PlIm_WpZH1FwMOLz-0"/>
                <mxCell id="0Bx4PlIm_WpZH1FwMOLz-1" parent="0Bx4PlIm_WpZH1FwMOLz-0"/>
                <mxCell id="KW1Q25oZcexUDas9vCzs-0" value="&lt;table cellpadding=&quot;4&quot; cellspacing=&quot;0&quot; border=&quot;1&quot; style=&quot;font-size: 1em ; width: 100% ; height: 100%&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;command&lt;/th&gt;&lt;th&gt;content&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;shell&lt;/td&gt;&lt;td&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;scalac helloworld.scala - &lt;/font&gt;compiles scala source&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;scalac&amp;nbsp;-d classes&amp;nbsp;helloworld.scala -&amp;nbsp;&lt;/font&gt;compiles scala source, and stores in classes folder&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;fsc helloworld.scala -&amp;nbsp;&lt;/font&gt;fast scala compiler&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;fsc -shutdown - &lt;/font&gt;shutdown daemon process&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;jar cvf helloworld.jar -C classes/ . - &lt;/font&gt;package classes into current helloworld.jar&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;jar tvf helloworld.jar&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;scala helloworld.scala - &lt;/font&gt;runs scala script&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;scala helloworld - &lt;/font&gt;runs compiled scala file&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;scala helloworld.jar&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;scala -cp helloworld.jar Hello - &lt;/font&gt;runs &lt;font face=&quot;Courier New&quot;&gt;Hello&lt;/font&gt; in jar file&lt;/li&gt;&lt;/ol&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt; " style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;fillColor=none;" parent="0Bx4PlIm_WpZH1FwMOLz-1" vertex="1">
                    <mxGeometry x="19" y="7" width="795" height="221" as="geometry"/>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>