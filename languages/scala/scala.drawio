<mxfile host="dbdbba75-6bdd-4c73-af07-079690466ba2" modified="2021-07-05T10:12:00.607Z" agent="5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.47.3 Chrome/78.0.3904.130 Electron/7.3.2 Safari/537.36" etag="EHdHc32Z5B1BnJHPlaKR" version="13.1.3" pages="2">
    <diagram id="VkuhRVuNWo4Isk1fSskC" name="syntax">
        <mxGraphModel dx="822" dy="480" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
            <root>
                <mxCell id="qb4r55SKsurtdfBrbbfe-0"/>
                <mxCell id="qb4r55SKsurtdfBrbbfe-1" parent="qb4r55SKsurtdfBrbbfe-0"/>
                <mxCell id="HpB7mABzfCAcBU-wO4bE-0" value="&lt;table cellpadding=&quot;4&quot; cellspacing=&quot;0&quot; border=&quot;1&quot; style=&quot;font-size: 1em ; width: 100% ; height: 100%&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;syntax&lt;/th&gt;&lt;th&gt;content&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;exception&lt;/td&gt;&lt;td&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;throw new&amp;nbsp;IllegalArgumentException - throw&lt;/font&gt; has type Nothing&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;try{} catch{} finally {} - &lt;/font&gt;returns a value, if exception thrown&amp;nbsp; not caught,&amp;nbsp; the expression has no resutt at all&lt;/li&gt;&lt;li&gt;the value computed in the &lt;font face=&quot;Courier New&quot;&gt;finally&lt;/font&gt; clause, if there is one, is dropped, it usually does some clean work&lt;/li&gt;&lt;li&gt;if &lt;font face=&quot;Courier New&quot;&gt;finally&lt;/font&gt; has explicit &lt;font face=&quot;Courier New&quot;&gt;return&lt;/font&gt;, or throws an &lt;font face=&quot;Courier New&quot;&gt;exception&lt;/font&gt;, the return value or exception will the final expression result&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;div&gt;def urlFor(path: String) =&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new URL(path)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; } catch {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case e: MalformedURLException =&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new URL(&quot;http://www.scala-lang.org&quot;)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;try {&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; val file = new FileReader(&quot;input.txt&quot;)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; ...&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;} catch {&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; case ex: FileNotFoundException =&amp;gt; // Handle missing file&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; case ex: IOException =&amp;gt; // Handle other I/O error&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;} finally {&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; file.close()&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;}&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;def f(): Int = try return 1 finally return 2 =&amp;gt; f() =&amp;gt; 2&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;def g(): Int = try 1 finally 2 // g() =&amp;gt; 1&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;class&lt;/td&gt;&lt;td&gt;&lt;h3&gt;definition&lt;/h3&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;class ChecksumAccumulator {&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; private var sum = 0&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; def add(b: Byte): Unit = {&amp;nbsp;&lt;span style=&quot;font-size: 1em&quot;&gt;sum += b }&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; def checusum(): Int =&lt;/font&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;&amp;nbsp;~(sum &amp;amp; 0xff) + 1&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;class Rational(n: Int, d: Int) {&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp; require(d != 0)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;&amp;nbsp; &amp;nbsp; val numer: Int = n&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp; val denom: Int = d&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp; def this(n: Int) = this(n, 1) // auxiliary constructor&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;&amp;nbsp; &amp;nbsp; override def toString = numer + &quot;/&quot; + denom&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp; def add(that: Rational): Rational =&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new Rational(&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; numer * that.denom + that.numer * denom,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; denom * that.denom&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; )&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp; def + (that: Rational): Rational =&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new Rational(&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; numer * that.denom + that.numer * denom,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; denom * that.denom&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; )&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; def lessThan(that: Rational) =&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.numer * that.denom &amp;lt; that.numer * this.denom&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; def max(that: Rational) =&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (this.lessThan(that)) that else this&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;courier new&quot;&gt;}&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;h4&gt;modifier&lt;/h4&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;private&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;protected - &lt;/font&gt;only accesible fro subclasses of the class in which the member is defined&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;public - &lt;/font&gt;default, no need to specify&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;override&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;require(d != 0) - requeire&lt;/font&gt; defined in standalone object &lt;font face=&quot;Courier New&quot;&gt;Predef&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;this - &lt;/font&gt;self reference&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;this(n: Int) = this(n, 1) - &lt;/font&gt;auxiliary constructor must invoke another constructor of the same class first&lt;/li&gt;&lt;li&gt;as of &quot;6&quot;, the primary construction is the final single point of entry of a class, and the only calls supclass constructor&lt;/li&gt;&lt;/ol&gt;&lt;h4&gt;singleton object&lt;/h4&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&amp;nbsp;&lt;font face=&quot;Courier New&quot;&gt;import scala.collection.mutable&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;object ChecksumAccumulator {&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;&amp;nbsp; &amp;nbsp; private val cache = mutable.Map.empty[String, Int]&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;def calculate(s: String): Int =&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (cache.contains(s))&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cache(s)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; else {&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; val acc = new ChecksumAccumulator&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; for (c &amp;lt;- s)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; acc.add(c.toByte)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; val cs = acc.checksum()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cache += (s -&amp;gt; cs)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cs&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;}&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;val ca =&amp;nbsp;&lt;/font&gt;&lt;span&gt;&lt;font face=&quot;Courier New&quot;&gt;ChecksumAccumulator.calculate(&quot;Every value is an object.&quot;)&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;ol&gt;&lt;li&gt;a singleton funtions behave like static methods in Java&lt;/li&gt;&lt;li&gt;a singleton object shares the same name with a class, it is called that class's &lt;i&gt;companion object.&amp;nbsp;&lt;/i&gt;&lt;/li&gt;&lt;li&gt;the class is called the &lt;i style=&quot;font-size: 1em&quot;&gt;companion class&lt;/i&gt;&lt;span style=&quot;font-size: 1em&quot;&gt; of the singleton. they are defined&lt;/span&gt;&amp;nbsp;in the same source file.&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;the class and the singleton can&amp;nbsp;&lt;/span&gt;access each other's private members&lt;/li&gt;&lt;li&gt;a singleton wihout a companion class is a &lt;i&gt;standalone object&lt;/i&gt;. it can&lt;i&gt;&amp;nbsp;&lt;/i&gt;collect utility methods or become an app's entry point&lt;/li&gt;&lt;li&gt;the entry point has a &lt;font face=&quot;Courier New&quot;&gt;main&lt;/font&gt; method, taking one &lt;font face=&quot;Courier New&quot;&gt;Array[String]&lt;/font&gt; parameter and returning a &lt;font face=&quot;Courier New&quot;&gt;Unit&lt;/font&gt; value. see below&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;import ChecksumAccumulator.calculate&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;object Summer {&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; def main(args: Array[String]): Unit = {&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; for (arg &amp;lt;- args)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; println(arg + &quot;: &quot; + calculate(arg))&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;}&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;h4&gt;&lt;font face=&quot;Courier New&quot;&gt;scala.App &lt;/font&gt;trait&lt;/h4&gt;&lt;div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;import ChecksumAccumulator.calculate&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; object FallWinterSpringSummer extends App {&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; for (season &amp;lt;- List(&quot;fall&quot;, &quot;winter&quot;, &quot;spring&quot;))&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; println(season + &quot;: &quot; + calculate(season))&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;}&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;works like a singleton object with a main method, use &lt;font face=&quot;Courier New&quot;&gt;args&lt;/font&gt; to access command-line arguments&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;h3&gt;initialization&lt;/h3&gt;&lt;h4&gt;1. new&lt;/h4&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;val big = new java.math.BigInteger(&quot;12345&quot;) - &lt;/font&gt;parameterizes with value&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;val greetStrings = new Array[String](3) -&amp;nbsp;&lt;/font&gt;parameterizes&amp;nbsp;with type and length&lt;/li&gt;&lt;/ol&gt;&lt;h4&gt;2. factory method&lt;/h4&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;val greetStrings = Array(&quot;zero&quot;, &quot;one&quot;, &quot;two&quot;) &amp;lt;=&amp;gt; Apply.apply(&quot;zero&quot;, &quot;one&quot;, &quot;two&quot;)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;a factory method calls an &lt;font face=&quot;Courier New&quot;&gt;apply&lt;/font&gt; method, which creates and returns the new array&lt;/li&gt;&lt;li&gt;the &lt;font face=&quot;Courier New&quot;&gt;apply&lt;/font&gt; method is defined on the corresponding &lt;font face=&quot;Courier New&quot;&gt;Array&lt;/font&gt; &lt;i&gt;companion object&lt;/i&gt;&lt;/li&gt;&lt;li&gt;this seems like calling a static meothod named &lt;font face=&quot;Courier New&quot;&gt;apply&lt;/font&gt; on class &lt;font face=&quot;Courier New&quot;&gt;Array&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;div&gt;&lt;h3&gt;usage&lt;/h3&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;arr(2) &amp;lt;=&amp;gt; arr.apply(2) - &lt;/font&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;a variable surrounded by &lt;/span&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;()&lt;/font&gt;&lt;span style=&quot;font-size: 1em&quot;&gt; invocates an &lt;/span&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;apply&lt;/font&gt;&lt;span style=&quot;font-size: 1em&quot;&gt; method on&amp;nbsp;that variable&lt;/span&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;arr(2) =&amp;nbsp; &quot;hello&quot; &amp;lt;=&amp;gt; arr.update(2, &quot;hello&quot;) -&amp;nbsp;&lt;/font&gt;an assignment invocates an &lt;font face=&quot;Courier New&quot;&gt;update&lt;/font&gt; method&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;1 -&amp;gt; &quot;Go&quot; &amp;lt;=&amp;gt; (1).-&amp;gt;(&quot;Go&quot;) - &quot;-&amp;gt;&quot;&lt;/font&gt; can be invoked on any object, returns a two-element tuple, see &lt;font face=&quot;Courier New&quot;&gt;Map&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;package and import&lt;/td&gt;&lt;td&gt;&lt;h3&gt;import&lt;/h3&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;import&lt;/font&gt; allows using a simple package element name:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;import scala.collection.mutable&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;var helloSet = mutable.Set(&quot;hello&quot;, &quot;world&quot;)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;h3&gt;note&lt;/h3&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;scala implicitly imports packages&amp;nbsp;&lt;/span&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;java.lang&lt;/font&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;scala &lt;/font&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;and the members a singleton object named &lt;/span&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;Predef&lt;/font&gt;&lt;span style=&quot;font-size: 1em&quot;&gt; in &lt;/span&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;scala&lt;/font&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;println&lt;/font&gt; invokes &lt;font face=&quot;Courier New&quot;&gt;Predef.println&lt;/font&gt;, which invokes &lt;font face=&quot;Courier New&quot;&gt;Console.println&lt;/font&gt;, &lt;font face=&quot;Courier New&quot;&gt;assert&lt;/font&gt; invokes &lt;font face=&quot;Courier New&quot;&gt;Predef.assert&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt; " style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;fillColor=none;" parent="qb4r55SKsurtdfBrbbfe-1" vertex="1">
                    <mxGeometry x="7" y="70" width="817" height="2424" as="geometry"/>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
    <diagram id="bgcSUaLAC-1q4cRJDx9f" name="data structure">
        <mxGraphModel dx="822" dy="480" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
            <root>
                <mxCell id="0Rvd_On3wIhwAxiwULAO-0"/>
                <mxCell id="0Rvd_On3wIhwAxiwULAO-1" parent="0Rvd_On3wIhwAxiwULAO-0"/>
                <mxCell id="K1b5NLYzb6JKZ1TuWBmp-0" value="&lt;table cellpadding=&quot;4&quot; cellspacing=&quot;0&quot; border=&quot;1&quot; style=&quot;font-size: 1em ; width: 100% ; height: 100%&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;data structure&lt;/th&gt;&lt;th&gt;content&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;primitive&lt;/td&gt;&lt;td&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Byte&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;short&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Int&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Long&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Float&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Double&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Char&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;Boolean&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;scala&lt;/td&gt;&lt;td&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Unit&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Option[T]&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;immutable&lt;/td&gt;&lt;td&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;java.lang.String&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;[scala.]List(1, 2, 3)&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;tuple: (99, &quot;buff&quot;) - &lt;/font&gt;can&amp;nbsp;contain fixed-length and different types of elements, length up to 22 &lt;font face=&quot;Courier New&quot;&gt;Tuple22&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;[scala.collection.immutable.]Set[, HashSet](&quot;Abuout&quot;, &quot;Before&quot;)&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;[scala.collection.immutable.]Map[, HashaMap](&quot;A&quot; -&amp;gt; &quot;Abuout&quot;, &quot;B&quot; -&amp;gt; &quot;Before&quot;)&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;[scala.collection.immutable.]Range&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;mutable&lt;/td&gt;&lt;td&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Array&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;scala.collection.mutable.ListBuffer&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;scala.collection.mutable.[Set, HashSet](&quot;Abuout&quot;, &quot;Before&quot;)&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;scala.collection.mutable.[Map, HashaMap](&quot;A&quot; -&amp;gt; &quot;Abuout&quot;, &quot;B&quot; -&amp;gt; &quot;Before&quot;)&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;io&lt;/td&gt;&lt;td&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;scala.io.Source&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Console&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;java.io.File&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt; " style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;fillColor=none;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    <mxGeometry x="12" y="497" width="803" height="570" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-2" value="" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-0" target="20mQxIMJ3UpCQnM9mhCa-1" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-4" value="" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-0" target="20mQxIMJ3UpCQnM9mhCa-3" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-0" value="scala&lt;br&gt;Any" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    <mxGeometry x="375" y="13" width="120" height="36" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-28" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-3" target="20mQxIMJ3UpCQnM9mhCa-27" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-30" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-3" target="20mQxIMJ3UpCQnM9mhCa-29" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-39" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;exitX=0.562;exitY=1;exitDx=0;exitDy=0;exitPerimeter=0;entryX=0.359;entryY=0;entryDx=0;entryDy=0;entryPerimeter=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-3" target="20mQxIMJ3UpCQnM9mhCa-40" edge="1">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="685" y="231" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-3" value="scala&lt;br&gt;AnyRef" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    <mxGeometry x="624" y="62" width="121" height="35" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-45" value="" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-38" target="20mQxIMJ3UpCQnM9mhCa-47" edge="1">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="565" y="388" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-38" value="scala&lt;br&gt;Null" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    <mxGeometry x="653" y="307.5" width="69" height="34" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-32" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-29" target="20mQxIMJ3UpCQnM9mhCa-31" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-29" value="scala&lt;br&gt;Iterable" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    <mxGeometry x="473" y="110" width="74" height="33" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-34" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-31" target="20mQxIMJ3UpCQnM9mhCa-33" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-36" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-3" target="20mQxIMJ3UpCQnM9mhCa-31" edge="1">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="662" y="178.5" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-31" value="scala&lt;br&gt;Seq" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    <mxGeometry x="508" y="162" width="74" height="33" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-33" value="scala&lt;br&gt;List" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    <mxGeometry x="552" y="219" width="74" height="33" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-27" value="java.lang&lt;br&gt;String" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    <mxGeometry x="755" y="176" width="66" height="35" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-6" value="" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-1" target="20mQxIMJ3UpCQnM9mhCa-5" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-10" value="" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-1" target="20mQxIMJ3UpCQnM9mhCa-9" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-14" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-1" target="20mQxIMJ3UpCQnM9mhCa-13" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-16" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-1" target="20mQxIMJ3UpCQnM9mhCa-15" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-18" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-1" target="20mQxIMJ3UpCQnM9mhCa-17" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-20" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-1" target="20mQxIMJ3UpCQnM9mhCa-19" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-22" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-1" target="20mQxIMJ3UpCQnM9mhCa-21" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-24" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-1" target="20mQxIMJ3UpCQnM9mhCa-23" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-26" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-1" target="20mQxIMJ3UpCQnM9mhCa-25" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-51" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-1" target="20mQxIMJ3UpCQnM9mhCa-50" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-1" value="scala&lt;br&gt;AnyVal" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    <mxGeometry x="123" y="65" width="120" height="32" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-50" value="...(other Scala value classes)..." style="rounded=1;whiteSpace=wrap;html=1;strokeColor=none;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    <mxGeometry x="320.5" y="255" width="168" height="28.5" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-25" value="scala&lt;br&gt;Unit" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    <mxGeometry x="325" y="114" width="55" height="40" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-23" value="scala&lt;br&gt;Boolean" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    <mxGeometry x="367" y="178" width="75" height="39" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-21" value="scala&lt;br&gt;Char" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    <mxGeometry x="300" y="302" width="56" height="35" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-19" value="scala&lt;br&gt;Byte" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    <mxGeometry x="221" y="262" width="71" height="32" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-17" value="scala&lt;br&gt;Short" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    <mxGeometry x="163" y="309" width="70" height="31" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-15" value="scala&lt;br&gt;Int" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    <mxGeometry x="120" y="268" width="68" height="32" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-13" value="scala&lt;br&gt;Long" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    <mxGeometry x="71" y="195" width="86" height="33" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-9" value="scala&lt;br&gt;Float" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    <mxGeometry x="27" y="157" width="84" height="32" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-5" value="scala&lt;br&gt;Double" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    <mxGeometry x="10" y="114" width="87" height="31" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-37" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" parent="0Rvd_On3wIhwAxiwULAO-1" source="20mQxIMJ3UpCQnM9mhCa-3" target="20mQxIMJ3UpCQnM9mhCa-33" edge="1">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="676.3813131313132" y="107" as="sourcePoint"/>
                        <mxPoint x="592" y="188.5" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-40" value="...(other Scala Classes)..." style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    <mxGeometry x="633" y="237" width="145" height="18" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-42" value="" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;entryX=0.25;entryY=0;entryDx=0;entryDy=0;" parent="0Rvd_On3wIhwAxiwULAO-1" target="20mQxIMJ3UpCQnM9mhCa-38" edge="1">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="632" y="285" as="sourcePoint"/>
                        <mxPoint x="662.9950000000001" y="285" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-43" value="" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="0Rvd_On3wIhwAxiwULAO-1" target="20mQxIMJ3UpCQnM9mhCa-38" edge="1">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="686" y="263" as="sourcePoint"/>
                        <mxPoint x="671.25" y="328" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-44" value="" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;entryX=0.75;entryY=0;entryDx=0;entryDy=0;" parent="0Rvd_On3wIhwAxiwULAO-1" target="20mQxIMJ3UpCQnM9mhCa-38" edge="1">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="731" y="273" as="sourcePoint"/>
                        <mxPoint x="682" y="310" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-47" value="scala&lt;br&gt;Nothing" style="rounded=1;whiteSpace=wrap;html=1;" parent="0Rvd_On3wIhwAxiwULAO-1" vertex="1">
                    <mxGeometry x="543" y="388" width="83" height="33" as="geometry"/>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-48" value="" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="0Rvd_On3wIhwAxiwULAO-1" target="20mQxIMJ3UpCQnM9mhCa-47" edge="1">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="595" y="291" as="sourcePoint"/>
                        <mxPoint x="594.5" y="398" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="20mQxIMJ3UpCQnM9mhCa-49" value="" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=block;startFill=0;endArrow=none;endFill=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="0Rvd_On3wIhwAxiwULAO-1" target="20mQxIMJ3UpCQnM9mhCa-47" edge="1">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="461" y="317" as="sourcePoint"/>
                        <mxPoint x="594.5" y="398" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>
