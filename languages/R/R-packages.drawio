<mxfile host="65bd71144e" pages="5">
    <diagram id="9QImNMWZk1bcv_mXnH6E" name="Write-Package">
        <mxGraphModel dx="1210" dy="790" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
            <root>
                <mxCell id="lQgNHgGrGewWendVLZnd-0"/>
                <mxCell id="lQgNHgGrGewWendVLZnd-1" parent="lQgNHgGrGewWendVLZnd-0"/>
                <mxCell id="3qcEMyLha4my2CrlZvu7-0" value="&lt;table cellpadding=&quot;4&quot; cellspacing=&quot;0&quot; border=&quot;1&quot; style=&quot;font-size: 1em ; width: 100% ; height: 100%&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th&gt;Contents&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;package&lt;/td&gt;&lt;td&gt;&lt;font face=&quot;Courier New&quot;&gt;usethis::create_package(&quot;cats&quot;) &lt;/font&gt;creates package with name &quot;cats&quot;&lt;br&gt;&lt;h3&gt;Structure&lt;/h3&gt;&lt;font face=&quot;Courier New&quot;&gt;cats/&lt;/font&gt;&lt;br style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;&amp;nbsp; &amp;nbsp; DESCRIPTION&lt;/span&gt;&lt;br style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;&amp;nbsp; &amp;nbsp; NAMESPACE&lt;/span&gt;&lt;br style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;&amp;nbsp; &amp;nbsp; .Rbuildignore&lt;/span&gt;&lt;br style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;&amp;nbsp; &amp;nbsp; R/&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;&amp;nbsp; &amp;nbsp; man/&lt;/span&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp; data/&lt;br&gt;&amp;nbsp; &amp;nbsp; data-raw/&lt;br&gt;&amp;nbsp; &amp;nbsp; inst/&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; extdata/&lt;br&gt;&amp;nbsp; &amp;nbsp; vignettes/&lt;br&gt;&amp;nbsp; &amp;nbsp; test/&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; testthat/&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; testthat.R&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;font face=&quot;Courier New&quot;&gt;DESCRIPTION&lt;/font&gt;&lt;/td&gt;&lt;td&gt;&lt;div&gt;&lt;span&gt;contains matadata about the package&lt;/span&gt;&lt;/div&gt;&lt;h3&gt;&lt;span&gt;Metadata&lt;/span&gt;&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Package: roxygen2&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Title: In-Line Documentation for R # &lt;/font&gt;short, no more than 65 letters&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Version: 6.1.0&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 1em ; font-family: &amp;#34;courier new&amp;#34;&quot;&gt;Authors@R: c(person(&quot;H&quot;, &quot;W&quot;,, &quot;hadley@rst.com&quot;, c(&quot;aut&quot;,&quot;cre&quot;,&quot;cph&quot;), person(...))&lt;/span&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Description: Long info ... # &lt;/font&gt;A para containing multiple lines, less than 80 letters per line, 4 space indent&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Licence: [GPL(&amp;gt;=2), GPL-2, GPL-3, BSD, MIT + file LICENSE]&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;LazyData: true&lt;/font&gt; - datasets will be not loaded to memory until needed&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; ; font-size: 1em&quot;&gt;LazyLoad: yes&lt;/span&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;URL:&amp;nbsp;https://github.com/klutometis/roxygen, https://...&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;BugReports:&amp;nbsp;https://github.com/klutometis/roxygen/issues&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Depends: R (&amp;gt;= 3.1)&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Imports: brew, R6 (&amp;gt;= 2.1.2), stringr (&amp;gt;=1.0.0), ...&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Suggests: covr, devtools, testthat (&amp;gt;= 0.8.0), ...&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;SystemRequirements: pandoc (&amp;gt;= 1.12.3) - http://pandoc.org&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;LinkingTo: Rcpp&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;VignetteBuilder: knitr&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Encoding: UTF-8&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;RoxygenNote: 6.1.0.9000&lt;br&gt;&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;NeedsCompilation: [no, yes]&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Packaged: 2018-07-25 20:48:13 UTC; hadley&lt;br&gt;&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Author: Hadley Wickham [aut, cre, cph], Peter Danenberg [aut, cph], ...&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Maintainer: Hadley Wickham &amp;lt;hadley@rstudio.com&amp;gt;&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Repository: CRAN&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Date/Publication: 2018-07-27 21:10:02 UTC&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;Built: R 3.5.1; ; 2020-09-24 13:30:47 UTC; unix&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;Packages in &lt;font face=&quot;Courier New&quot;&gt;imports&lt;/font&gt; will be installed automatically when they are not installed. Then they will be &lt;b&gt;loaded&lt;/b&gt;.&amp;nbsp;&lt;span style=&quot;font-size: 1em&quot;&gt;Packages in&lt;/span&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;depends&lt;/font&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;&amp;nbsp;works same as imports, except that they will be &lt;b&gt;attached&lt;/b&gt; &lt;b&gt;not loaded&lt;/b&gt;. Packages in &lt;font face=&quot;Courier New&quot;&gt;suggests&lt;/font&gt;&lt;/span&gt;&amp;nbsp;may be useful&amp;nbsp;&lt;/div&gt;&lt;div&gt;but not must have that they will not be installed automatically. use &lt;font face=&quot;Courier New&quot;&gt;requireNamespace(x, quietly = TRUE)&lt;/font&gt;&amp;nbsp;to&lt;/div&gt;&lt;div&gt;check if it is available.&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;font face=&quot;Courier New&quot;&gt;NAMESPACE&lt;/font&gt;&lt;/td&gt;&lt;td&gt;What to export and import, created default and updated when&amp;nbsp;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;devtools::document()&lt;/span&gt;&lt;span&gt;executed&lt;/span&gt;&lt;br&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;Imports&lt;/font&gt; defines how a function in one package finds a function in another. The &lt;font face=&quot;Courier New&quot;&gt;exports&lt;/font&gt; helps avoid conflicting with&lt;br&gt;other packages by specifying which functions are available outside of your package (internal functions are available &lt;br&gt;only within your package and can't easily be used by another package).&lt;br&gt;&lt;h3&gt;Export&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;export()&lt;/font&gt; - export functions (including S3 and S4 generics)&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;exportPattern()&lt;/font&gt;&amp;nbsp;- export all functions that match a pattern&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;exportClasses(), exportMethods()&lt;/font&gt; - export S4 classes and methods&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;S3method()&lt;/font&gt; - export S3 methods&lt;/li&gt;&lt;/ol&gt;&lt;h3&gt;Import&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;import()&lt;/font&gt; - import all functions from a package&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;importFrom()&lt;/font&gt;&lt;span style=&quot;font-size: 1em ; font-family: &amp;#34;helvetica&amp;#34;&quot;&gt; - import selected functions (including S4 generics)&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;importClassesFrom(), importMethodsFrom()&lt;/font&gt;&lt;span style=&quot;font-size: 1em ; font-family: &amp;#34;helvetica&amp;#34;&quot;&gt; - import S4 classes and methods&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 1em&quot;&gt;useDynLib()&lt;/font&gt;&lt;span style=&quot;font-size: 1em ; font-family: &amp;#34;helvetica&amp;#34;&quot;&gt; - import a function from C&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;font face=&quot;Courier New&quot;&gt;.Rbuildignore&lt;br&gt;&lt;/font&gt;&lt;/td&gt;&lt;td&gt;&lt;br&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;R/&lt;/td&gt;&lt;td&gt;Write R code in this folder.&lt;br&gt;&lt;ol&gt;&lt;li&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;roxygen2&lt;/span&gt;&amp;nbsp;- simplifies documentations writing&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;usethis::use_package(pkg) &lt;/span&gt;-&amp;nbsp;adds&amp;nbsp;package dependencies&lt;/li&gt;&lt;/ol&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;font face=&quot;Courier New&quot;&gt;man/&lt;/font&gt;&lt;/td&gt;&lt;td&gt;&lt;font face=&quot;Courier New&quot; style=&quot;text-align: center&quot;&gt;.Rd&amp;nbsp;&lt;/font&gt;&lt;font style=&quot;text-align: center&quot;&gt;help&amp;nbsp;&lt;/font&gt;&lt;font style=&quot;text-align: center&quot;&gt;files folder&lt;br&gt;&lt;/font&gt;&lt;br&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;devtools::document() Ctrl+Shift+D&lt;/span&gt; - generates &lt;font face=&quot;Courier New&quot;&gt;.Rd&lt;/font&gt; files automatically and updates &lt;font face=&quot;Courier New&quot;&gt;NAMESPACE&lt;/font&gt; file&lt;br&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;font face=&quot;Courier New&quot;&gt;data/&lt;/font&gt;&lt;/td&gt;&lt;td&gt;Store binary datas in&amp;nbsp;&lt;font face=&quot;Courier New&quot;&gt;.rda&lt;/font&gt;&amp;nbsp;format in this folder&lt;br&gt;&lt;br&gt;&lt;font face=&quot;Courier New&quot;&gt;usethis::use_data(&quot;x&quot;)&lt;/font&gt; - generates &lt;font face=&quot;Courier New&quot;&gt;x.rda&lt;/font&gt; file in &lt;font face=&quot;Courier New&quot;&gt;data/&lt;br&gt;&lt;/font&gt;&lt;br&gt;&lt;h3&gt;Documentation&lt;/h3&gt;&lt;div&gt;Document the name of the dataset and save it in R/, e.g., &lt;font face=&quot;Courier New&quot;&gt;R/data.R&lt;/font&gt;. it often contains &lt;font face=&quot;Courier New&quot;&gt;@format&lt;/font&gt; and &lt;font face=&quot;Courier New&quot;&gt;@source&lt;/font&gt; tag&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;#' Prices of 50,000 round cut diamonds&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;#' A dataset containing the prices and other attributes of almost 54,000 diamonds.&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;#'&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;#' @format A data frame with 53940 rows and 10 variables:&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;#' \describe{&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;#'&amp;nbsp; &amp;nbsp;\item{price}{price, in US dollars}&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;#'&amp;nbsp; &amp;nbsp;\item{carat}{weight of the diamond, in carats}&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;#'&amp;nbsp; &amp;nbsp;...&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;#' }&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;#' @source \url{http://www.diamondse.info/}&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;&quot;&lt;/font&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;diamonds&lt;/span&gt;&lt;font face=&quot;Courier New&quot;&gt;&quot;&lt;/font&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;font face=&quot;Courier New&quot;&gt;data-raw/&lt;/font&gt;&lt;/td&gt;&lt;td&gt;Store&amp;nbsp;&lt;font face=&quot;Courier New&quot;&gt;.R&lt;/font&gt;&amp;nbsp;files generating binary data in&amp;nbsp;&lt;font face=&quot;Courier New&quot;&gt;data/&lt;/font&gt;&lt;br&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;usethis::use_data_raw(&quot;dt&quot;)&lt;/font&gt;&amp;nbsp;- creates&amp;nbsp;&lt;font face=&quot;Courier New&quot;&gt;data-raw/dt.R&lt;/font&gt;,&amp;nbsp;when executed,&amp;nbsp;&lt;font face=&quot;Courier New&quot;&gt;data/dt.rda&lt;/font&gt;&amp;nbsp;created&lt;/li&gt;&lt;li&gt;add&amp;nbsp;&lt;font face=&quot;Courier New&quot;&gt;^data-raw$&lt;/font&gt;&amp;nbsp;to&amp;nbsp;&lt;font face=&quot;Courier New&quot;&gt;.Rbuildignore&lt;/font&gt;&amp;nbsp;when not want to include these&amp;nbsp;&lt;font face=&quot;Courier New&quot;&gt;.R&lt;/font&gt;&amp;nbsp;files&lt;/li&gt;&lt;/ol&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;font face=&quot;Courier New&quot;&gt;inst/&lt;/font&gt;&lt;/td&gt;&lt;td&gt;When the package is installed, every folder in &lt;font face=&quot;Courier New&quot;&gt;inst/&lt;/font&gt; will be moved to top level. So make sure never use a subdirectory&lt;br&gt;with the&amp;nbsp;same name as an existing directory.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;font face=&quot;Courier New&quot;&gt;inst/extdata/&lt;/font&gt;&lt;/td&gt;&lt;td&gt;Store additional data for example and vignettes.&lt;br&gt;&lt;br&gt;&lt;font face=&quot;Courier New&quot;&gt;[devtools|base]::system.file(&quot;extdata&quot;, &quot;data.csv&quot;, package = &quot;cats&quot;)&lt;/font&gt; - refers to&amp;nbsp;&lt;font face=&quot;Courier New&quot;&gt;data.csv&lt;/font&gt; file&lt;br&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;vignettes/&lt;/span&gt;&lt;br&gt;&lt;/td&gt;&lt;td&gt;Give a high-level understanding of what a package can do.&lt;br&gt;&lt;br&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;usethat::use_vignette(&quot;introduction&quot;)&lt;/font&gt; - creates an introduction vignette &lt;font face=&quot;Courier New&quot;&gt;Rmd&lt;/font&gt; file&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;devtools::build_vignettes()&lt;/font&gt; - creates vignettes to &lt;font face=&quot;Courier New&quot;&gt;inst/doc/&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;devtools::build()&lt;/font&gt; - also creates vignettes to inst/doc when creates package&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;devtools::install(build_vignettes = TRUE)&lt;/font&gt; - builds vignettes to &lt;font face=&quot;Courier New&quot;&gt;doc/&lt;/font&gt; when the package is installed&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;browseVignettes(&quot;packagename&quot;)&lt;/font&gt; - views package vignettes&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;vignette(&quot;intro&quot;)&lt;/font&gt; - views specific vignette&lt;/li&gt;&lt;/ol&gt;&lt;h3&gt;Metadata&lt;/h3&gt;&lt;font face=&quot;Courier New&quot;&gt;title: &quot;Vignette Title&quot;&lt;br&gt;output: rmarkdown::html_vignette &lt;br&gt;vignette: &amp;gt;&lt;br&gt;&amp;nbsp; %\VignetteIndexEntry{Vignette Title}&lt;br&gt;&amp;nbsp; %\VignetteEngine{knitr::rmarkdown}&lt;br&gt;&amp;nbsp; \usepackage[utf8]{inputenc}&lt;/font&gt;&lt;br&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;font face=&quot;Courier New&quot;&gt;test/testthat/&lt;br&gt;test/tessthat.R&lt;/font&gt;&lt;/td&gt;&lt;td&gt;Use &lt;font face=&quot;Courier New&quot;&gt;testthat&lt;/font&gt; to test package. All test files lives in &lt;font face=&quot;Courier New&quot;&gt;test/testthat/&lt;/font&gt;, and the filename starts with &lt;font face=&quot;Courier New&quot;&gt;test&lt;/font&gt;.&lt;br&gt;&lt;br&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;usethis::use_testthat()&lt;/font&gt; - creates corresponding folder and files&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;usethis::use_test(&quot;name&quot;)&lt;/font&gt; - creates test R file &lt;font face=&quot;Courier New&quot;&gt;test-name.R&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;devtools::test() ctrl+shift+t&lt;/font&gt; - tests the package&lt;/li&gt;&lt;/ol&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;build process&lt;/td&gt;&lt;td&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot; style=&quot;text-align: center&quot;&gt;devtools::load_all() Ctrl+shift+L&lt;/font&gt;&lt;font style=&quot;text-align: center&quot;&gt; - loads p&lt;/font&gt;ackage into memory, not available when R session closed&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot; style=&quot;text-align: center&quot;&gt;devtools::build()&lt;/font&gt;&lt;font style=&quot;text-align: center&quot;&gt; -&amp;nbsp;&lt;/font&gt;Package bundle&amp;nbsp;&lt;font face=&quot;Courier New&quot; style=&quot;text-align: center&quot;&gt;.tar.gz&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot; style=&quot;text-align: center&quot;&gt;devtools::install(&quot;cats&quot;) devtools::uninstall(&quot;cats&quot;)&lt;/font&gt;&lt;font style=&quot;text-align: center&quot;&gt; - install and uninstall the package&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Roxygen&lt;/td&gt;&lt;td&gt;&lt;h3&gt;Tags&lt;/h3&gt;&lt;div&gt;The line starts with &lt;font face=&quot;Courier New&quot;&gt;#'&lt;/font&gt; followed by &lt;font face=&quot;Courier New&quot;&gt;@tag&lt;/font&gt;.&lt;/div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;@title&lt;/font&gt; - the first sentence fitting on one line without a full stop ending, tag can be omitted&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;@description&lt;/font&gt; - Description section, the second paragraph describing the function, tag can be omitted&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;@details&lt;/font&gt; - Details section, optional often a long section after the argument section, tag can be omitted&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;@param&lt;/font&gt; - Arguments section&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;@return&lt;/font&gt; - Value section&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;@format&lt;/font&gt; - Format section, gives dataset overview, includes a definition list describing each variable&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;@source \url{http://...}&lt;/font&gt; - Source section,&amp;nbsp;provides details of where to get the data, often a &lt;font face=&quot;Courier New&quot;&gt;\url{}&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;@importFrom brio readLines writeLines&lt;br&gt;&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;@examples&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;@export&lt;/font&gt; - update&amp;nbsp;&lt;font face=&quot;Courier New&quot;&gt;NAMESPACE&lt;/font&gt; file&lt;/li&gt;&lt;/ol&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt; " style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1" parent="lQgNHgGrGewWendVLZnd-1" vertex="1">
                    <mxGeometry x="11" y="8" width="791" height="2479" as="geometry"/>
                </mxCell>
                <mxCell id="rgyHpt2T70JYm0VFmEKd-1" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="lQgNHgGrGewWendVLZnd-1" edge="1">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="176.5" y="314" as="sourcePoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="Dkxw5LJxAjpuDGVzjxI7-1" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="lQgNHgGrGewWendVLZnd-1" edge="1">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="176.5" y="399" as="sourcePoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="anJ-lGI2h2znFpqZDuKq-13" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;curved=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="lQgNHgGrGewWendVLZnd-1" edge="1">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="577" y="165" as="sourcePoint"/>
                    </mxGeometry>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
    <diagram id="85oTd-9OAQ14X6jp3VWs" name="mlr3">
        <mxGraphModel dx="1210" dy="790" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
            <root>
                <mxCell id="S7HSzU4nviUU97glNN03-0"/>
                <mxCell id="S7HSzU4nviUU97glNN03-1" parent="S7HSzU4nviUU97glNN03-0"/>
                <mxCell id="S7HSzU4nviUU97glNN03-12" value="&lt;table cellpadding=&quot;12&quot; cellspacing=&quot;0&quot; border=&quot;1&quot; style=&quot;font-size: 1em ; width: 100% ; height: 100%&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th&gt;Content&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Machine Learning&lt;/td&gt;&lt;td&gt;&lt;h3&gt;Supervised&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;Regression&lt;/li&gt;&lt;li&gt;Classification&lt;/li&gt;&lt;li&gt;Survival Analysis&lt;/li&gt;&lt;/ol&gt;&lt;h3&gt;Unsupervised&lt;/h3&gt;&lt;div&gt;&lt;h3&gt;Common Algorithms&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;(penalized) linear and logistic regression&lt;/li&gt;&lt;li&gt;K-Nearest Neighbors Regression and Classification&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;Linear and Quadratic Discriminant Analysis&lt;/span&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;Naive Bayes&lt;/li&gt;&lt;li&gt;Regression and Classification Trees&lt;/li&gt;&lt;li&gt;Random Regression Forests and Random Classification Forests&lt;/li&gt;&lt;li&gt;Support-Vector Machines&lt;/li&gt;&lt;li&gt;Gradient Boosting&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span style=&quot;font-size: 1em&quot;&gt;Steps&lt;/span&gt;&lt;br&gt;&lt;/td&gt;&lt;td&gt;&lt;ol&gt;&lt;li&gt;Preprocessing&lt;/li&gt;&lt;li&gt;Task&lt;/li&gt;&lt;li&gt;Learner&lt;/li&gt;&lt;li&gt;Train-Test-Evaluation (Model, Prediction, Measure)&lt;/li&gt;&lt;li&gt;Hyperparameter Tuning&lt;/li&gt;&lt;li&gt;Feature selection (Filtering&lt;/li&gt;&lt;li&gt;Ensemble&lt;/li&gt;&lt;li&gt;Resamping&lt;/li&gt;&lt;li&gt;Banchmarking&lt;/li&gt;&lt;li&gt;Pipelines&lt;/li&gt;&lt;li&gt;Visualization&lt;/li&gt;&lt;li&gt;Parallelization&lt;/li&gt;&lt;/ol&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Tasks&lt;/td&gt;&lt;td&gt;&lt;p&gt;Tasks are objects that contain the data and additional meta-data for a machine learning problem.&lt;/p&gt;&lt;p&gt;Predefined Tasks&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;mlr3::mlr_tasks()&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;mlr3::tsk()&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;h3&gt;Supervised&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;mlr3::TaskClassif()&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;mlr3::TaskRegr()&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;mlr3::TaskSurv()&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;mlr3::TaskOrdinal()&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Learner&lt;/td&gt;&lt;td&gt;A unified interface to many machine learning algorithms in R.&lt;h3&gt;Predefined Learners&lt;/h3&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;mlr3:mlr_learners&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3&gt;Learner&lt;/h3&gt;&lt;/div&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;mlr3::lrn()&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Hyperparameters&lt;br&gt;&lt;/td&gt;&lt;td&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;learner$param_set&lt;/font&gt;&amp;nbsp;- hyperparameter sets&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;learner$param_set$values &amp;lt;-&amp;nbsp; ...&lt;/font&gt;&amp;nbsp;- gets or overwrites hyperparameter values&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;learner$param_set$values &amp;lt;- mlrmisc::insert_named(...)&lt;/font&gt;&amp;nbsp;- updates hyperparameters&lt;/li&gt;&lt;/ol&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Train-Test-Evaluation&lt;br&gt;&lt;/td&gt;&lt;td&gt;&lt;h3&gt;Train and Test Set&lt;/h3&gt;&lt;font face=&quot;Courier New&quot;&gt;train_set &amp;lt;- sample(task$nrow, 0.8 * task$nrow)&lt;/font&gt;&lt;br&gt;&lt;font face=&quot;Courier New&quot;&gt;test_set &amp;lt;- setdiff(seq_len(task$nrow), train_set)&lt;/font&gt;&lt;br&gt;&lt;h3&gt;Prediction Type&lt;/h3&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;learner$predict_type &amp;lt;- [&quot;response&quot;&amp;lt;d&amp;gt;, &quot;prob&quot;]&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;h3&gt;Training&lt;/h3&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;learn$train(task, row_ids = train_set)&lt;/font&gt;&lt;/div&gt;&lt;h3&gt;Prediction&lt;/h3&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;prediction &amp;lt;- learn$predict(task, row_ids = test-set)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;prediction$response&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;prediction$truth&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;prediction$prob&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;prediction$confusion&lt;/font&gt;&lt;/div&gt;&lt;h3&gt;Plotting&lt;/h3&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;mlr3viz::autoplot(prediction)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;# &lt;/span&gt;roc need&amp;nbsp;&lt;span style=&quot;font-size: 1em&quot;&gt;precrec package and set&amp;nbsp;&lt;font face=&quot;Courier New&quot;&gt;predict_type = &quot;prob&quot;&lt;/font&gt;&lt;/span&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34;&quot;&gt;mlr3viz::autoplot(prediction, type = &quot;roc&quot;)&lt;/span&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Measure&lt;/td&gt;&lt;td&gt;Peformance assessment.&lt;br&gt;&lt;h3&gt;Predefined Measures&lt;/h3&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;mlr3::mlr_measures&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;mlr3::msr()&lt;/font&gt;&lt;/div&gt;&lt;h3&gt;Measures&lt;/h3&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;classif.acc&lt;/font&gt; - classification accuracy&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;classif.ce&lt;/font&gt; - classification error&lt;/li&gt;&lt;li&gt;classif.auc - area under the ROC curve&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;regr.mse&lt;/font&gt; - mean square error&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;measure &amp;lt;- msr(&quot;classif.acc&quot;)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;prediction$score(measure)&lt;/font&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Resampling&lt;/td&gt;&lt;td&gt;Resampling strategies are usually used to assess the performance of a learning algorithm.&lt;br&gt;&lt;h3&gt;Predefined Resampling&lt;/h3&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;mlr3::mlr_resampling&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;resamping &amp;lt;- mlr3::rsmp(&quot;holdout&quot;)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;rsmp(&quot;holdout&quot;, ratio = 0.8)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;resamping$param_set$values &amp;lt;- list(ratio = .8)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;resmpling$instantiate(task)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;resampling$train_set(1)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;resmapling$test_set(1)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;holdout&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;loo&lt;/font&gt; - leave one out cross validation&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;cv&lt;/font&gt; - cross validation&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;repeated_cv&lt;/font&gt; - repeated cross validation&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;boostrap&lt;/font&gt; - boostrapping&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;subsamping&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;insample&lt;/font&gt; - in-sample resampling&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;custom&lt;/font&gt; - custom resampling&lt;/li&gt;&lt;/ol&gt;&lt;h3&gt;Example&lt;/h3&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;task &amp;lt;- tsk(&quot;pima&quot;)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;learner &amp;lt;- lrn(&quot;classif.rpart&quot;, maxdepth = 3, predict_type = &quot;prob&quot;)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;resampling &amp;lt;- rsmp(&quot;cv&quot;, folds = 3L)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;rr &amp;lt;- resampling(task, learner, resampling, store_models = TRUE)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;rr$score(msr(&quot;classif.ce&quot;))&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;rr$aggregate(msr(&quot;classif.ce&quot;))&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;rr$ressmpling&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Courier New&quot;&gt;rr$prediction()&lt;/font&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Benchmarking&lt;/td&gt;&lt;td&gt;Benchmark compares&amp;nbsp;the performance of different learners on multiple tasks and/or different resampling schemes.&lt;br&gt;&lt;br&gt;&lt;font face=&quot;Courier New&quot;&gt;design &amp;lt;- benchmark_grid(&lt;br&gt;&amp;nbsp; &amp;nbsp; tasks = tsk(&quot;iris&quot;),&lt;br&gt;&amp;nbsp; &amp;nbsp; learners = list(lrn(&quot;classif.rpart&quot;), lrn(&quot;classif.featureless&quot;)),&lt;br&gt;&amp;nbsp; &amp;nbsp; resamplings = rsmp(&quot;holdout&quot;)&lt;br&gt;)&lt;br&gt;bmr &amp;lt;- benchmark(design)&lt;br&gt;measures &amp;lt;- list(&lt;br&gt;&amp;nbsp; &amp;nbsp; msr(&quot;classif.auc&quot;, id = &quot;auc_train&quot;, predict_sets = &quot;train&quot;,&lt;br&gt;&amp;nbsp; &amp;nbsp; msr(&quot;classif.auc&quot;, id = &quot;auc_test&quot;&lt;br&gt;)&lt;br&gt;bmr$aggregate(measures)&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt; " style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;fillColor=none;" parent="S7HSzU4nviUU97glNN03-1" vertex="1">
                    <mxGeometry x="14" y="14" width="784" height="2827" as="geometry"/>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>
